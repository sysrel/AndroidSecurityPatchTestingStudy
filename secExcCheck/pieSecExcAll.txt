pie-security-release/wifi/java/android/net/wifi/WifiManager.java:1800:     * @throws  {@link java.lang.SecurityException} if the caller is missing required permissions.
pie-security-release/wifi/java/android/net/wifi/WifiManager.java:1980:     * the permissions will trigger a {@link java.lang.SecurityException}.
pie-security-release/wifi/java/android/net/wifi/WifiManager.java:2063:     * {@link java.lang.SecurityException}.
pie-security-release/wifi/java/android/net/wifi/WifiManager.java:2475:     * without the permission will trigger a {@link java.lang.SecurityException}.
pie-security-release/wifi/java/android/net/wifi/aware/WifiAwareNetworkSpecifier.java:268:            throw new SecurityException("mismatched UIDs");
pie-security-release/wifi/java/android/net/wifi/aware/WifiAwareAgentNetworkSpecifier.java:148:        throw new SecurityException(
pie-security-release/wifi/java/android/net/wifi/RttManager.java:1014:        } catch (SecurityException e) {
pie-security-release/wifi/java/android/net/wifi/hotspot2/ConfigParser.java:30:import java.security.GeneralSecurityException;
pie-security-release/wifi/java/android/net/wifi/hotspot2/ConfigParser.java:203:            } catch(GeneralSecurityException | IOException e) {
pie-security-release/wifi/java/android/net/wifi/hotspot2/ConfigParser.java:449:            throws GeneralSecurityException, IOException {
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:326:     * Verify a SecurityException is thrown for callers without proper permissions for
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:329:    @Test(expected = SecurityException.class)
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:330:    public void testStartLocalOnlyHotspotThrowsSecurityException() throws Exception {
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:332:        doThrow(new SecurityException()).when(mWifiService)
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:515:     * Verify a SecurityException resulting from an application without necessary permissions will
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:518:    @Test(expected = SecurityException.class)
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:519:    public void testLocalOnlyHotspotCallbackFullOnSecurityException() throws Exception {
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:521:        doThrow(new SecurityException()).when(mWifiService)
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:525:        } catch (SecurityException e) {
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:623:     * Verify a SecurityException is thrown for callers without proper permissions for
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:626:    @Test(expected = SecurityException.class)
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:627:    public void testStartWatchLocalOnlyHotspotThrowsSecurityException() throws Exception {
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:629:        doThrow(new SecurityException()).when(mWifiService)
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:950:    @Test(expected = SecurityException.class)
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:951:    public void testSetWifiCountryCodeFailedOnSecurityException() throws Exception {
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:952:        doThrow(new SecurityException()).when(mWifiService).setCountryCode(anyString());
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:1066:        doThrow(new SecurityException()).when(mWifiService).setWifiApConfiguration(any(), any());
pie-security-release/wifi/tests/src/android/net/wifi/WifiManagerTest.java:1071:        } catch (SecurityException e) { }
pie-security-release/wifi/tests/src/android/net/wifi/aware/WifiAwareAgentNetworkSpecifierTest.java:159:    @Test(expected = SecurityException.class)
pie-security-release/tools/apilint/apilint.py:1073:        "java.lang.SecurityException",
Binary file pie-security-release/tools/preload/20100223.compiled matches
Binary file pie-security-release/tools/preload/20080522.compiled matches
Binary file pie-security-release/tools/preload/20090811.compiled matches
pie-security-release/test-base/src/android/test/InstrumentationTestCase.java:281:                    } catch (SecurityException e) {
pie-security-release/test-base/src/android/test/InstrumentationTestCase.java:312:            } catch (SecurityException e) {
pie-security-release/test-base/src/android/test/InstrumentationTestCase.java:344:                } catch (SecurityException e) {
pie-security-release/test-base/src/android/test/AndroidTestCase.java:89:     * attempting to start the activity and validating that a {@link SecurityException}
pie-security-release/test-base/src/android/test/AndroidTestCase.java:108:        } catch (SecurityException expected) {
pie-security-release/test-base/src/android/test/AndroidTestCase.java:118:     * uri and ensuring a {@link SecurityException} is thrown mentioning the particular permission.
pie-security-release/test-base/src/android/test/AndroidTestCase.java:126:            fail("expected SecurityException requiring " + permission);
pie-security-release/test-base/src/android/test/AndroidTestCase.java:127:        } catch (SecurityException expected) {
pie-security-release/test-base/src/android/test/AndroidTestCase.java:136:     * the uri and ensuring a {@link SecurityException} is thrown mentioning the particular
pie-security-release/test-base/src/android/test/AndroidTestCase.java:145:            fail("expected SecurityException requiring " + permission);
pie-security-release/test-base/src/android/test/AndroidTestCase.java:146:        } catch (SecurityException expected) {
pie-security-release/core/jni/android_os_HwParcel.cpp:97:            jniThrowException(env, "java/lang/SecurityException", NULL);
pie-security-release/core/jni/android_os_HwParcel.cpp:307:                    "java/lang/SecurityException",
pie-security-release/core/jni/android/graphics/pdf/PdfUtils.cpp:56:            jniThrowException(env, "java/lang/SecurityException",
pie-security-release/core/jni/android/graphics/pdf/PdfUtils.cpp:60:            jniThrowException(env, "java/lang/SecurityException", "unsupported security scheme");
pie-security-release/core/jni/android_util_Binder.cpp:751:            jniThrowException(env, "java/lang/SecurityException", NULL);
pie-security-release/core/jni/android_util_Process.cpp:72:            jniThrowExceptionFmt(env, "java/lang/SecurityException",
pie-security-release/core/jni/android_util_Process.cpp:84:            jniThrowExceptionFmt(env, "java/lang/SecurityException",
pie-security-release/core/jni/android_util_Process.cpp:97:            jniThrowExceptionFmt(env, "java/lang/SecurityException",
pie-security-release/core/jni/android_util_Process.cpp:504:                jniThrowException(env, "java/lang/SecurityException", "May not put this thread into background");
pie-security-release/core/jni/android_os_Parcel.cpp:724:    jniThrowException(env, "java/lang/SecurityException",
pie-security-release/core/java/android/view/ViewRootImpl.java:7976:                        throw new SecurityException("Insufficient permissions to invoke"
pie-security-release/core/java/android/view/inputmethod/InputConnectionWrapper.java:55:     * @throws SecurityException when this wrapper has non-null target and is immutable.
pie-security-release/core/java/android/view/inputmethod/InputConnectionWrapper.java:59:            throw new SecurityException("not mutable");
pie-security-release/core/java/android/se/omapi/Session.java:190:     * @throws SecurityException if the calling application cannot be granted
pie-security-release/core/java/android/se/omapi/Session.java:240:     * @throws SecurityException if the calling application cannot be granted
pie-security-release/core/java/android/se/omapi/Session.java:294:     * @throws SecurityException if the calling application cannot be granted
pie-security-release/core/java/android/se/omapi/Session.java:347:     * @throws SecurityException if the calling application cannot be granted
pie-security-release/core/java/android/se/omapi/Channel.java:159:     * @throws SecurityException if the command is filtered by the security policy.
pie-security-release/core/java/android/security/keystore/recovery/LockScreenRequiredException.java:21:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/security/keystore/recovery/LockScreenRequiredException.java:31:public class LockScreenRequiredException extends GeneralSecurityException {
pie-security-release/core/java/android/security/keystore/recovery/InternalRecoveryServiceException.java:21:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/security/keystore/recovery/InternalRecoveryServiceException.java:32:public class InternalRecoveryServiceException extends GeneralSecurityException {
pie-security-release/core/java/android/security/keystore/recovery/SessionExpiredException.java:21:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/security/keystore/recovery/SessionExpiredException.java:29:public class SessionExpiredException extends GeneralSecurityException {
pie-security-release/core/java/android/security/keystore/recovery/DecryptionFailedException.java:21:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/security/keystore/recovery/DecryptionFailedException.java:30:public class DecryptionFailedException extends GeneralSecurityException {
pie-security-release/core/java/android/security/net/config/NetworkSecurityTrustManager.java:26:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/security/net/config/NetworkSecurityTrustManager.java:61:        } catch (GeneralSecurityException | IOException e) {
pie-security-release/core/java/android/security/net/config/NetworkSecurityTrustManager.java:136:                    } catch (GeneralSecurityException e) {
pie-security-release/core/java/android/bluetooth/BluetoothPan.java:204:                        } catch (SecurityException e) {
pie-security-release/core/java/android/bluetooth/BluetoothHidDevice.java:403:                            } catch (SecurityException e) {
pie-security-release/core/java/android/accounts/AbstractAccountAuthenticator.java:518:            throw new SecurityException("caller uid " + uid + " lacks " + perm);
pie-security-release/core/java/android/provider/SearchIndexablesProvider.java:96:            throw new SecurityException("Provider must be exported");
pie-security-release/core/java/android/provider/SearchIndexablesProvider.java:99:            throw new SecurityException("Provider must grantUriPermissions");
pie-security-release/core/java/android/provider/SearchIndexablesProvider.java:102:            throw new SecurityException("Provider must be protected by READ_SEARCH_INDEXABLES");
pie-security-release/core/java/android/provider/DocumentsProvider.java:167:            throw new SecurityException("Provider must be exported");
pie-security-release/core/java/android/provider/DocumentsProvider.java:170:            throw new SecurityException("Provider must grantUriPermissions");
pie-security-release/core/java/android/provider/DocumentsProvider.java:174:            throw new SecurityException("Provider must be protected by MANAGE_DOCUMENTS");
pie-security-release/core/java/android/provider/DocumentsProvider.java:226:                throw new SecurityException(
pie-security-release/core/java/android/provider/DocumentsProvider.java:981:            throw new SecurityException(
pie-security-release/core/java/android/provider/BlockedNumberContract.java:140: * {@code false}, all operations on the provider will fail with a {@link SecurityException}. The
pie-security-release/core/java/android/provider/BlockedNumberContract.java:259:     * context {@code context}, this method will throw a {@link SecurityException}.
pie-security-release/core/java/android/provider/BlockedNumberContract.java:290:     * context {@code context}, this method will throw a {@link SecurityException}.
pie-security-release/core/java/android/provider/ContactsContract.java:224:     * {@link SecurityException} will be thrown. Unlike {@link Context#grantUriPermission},
pie-security-release/core/java/android/provider/Settings.java:4891:                        throw new SecurityException("Settings.Secure." + name
pie-security-release/core/java/android/provider/Settings.java:5762:         *             {@link VERSION_CODES#M} or later throws a {@code SecurityException}.
pie-security-release/core/java/android/provider/Settings.java:5771:         *             {@link VERSION_CODES#M} or later throws a {@code SecurityException}.
pie-security-release/core/java/android/provider/Settings.java:5784:         *             {@link VERSION_CODES#M} or later throws a {@code SecurityException}.
pie-security-release/core/java/android/provider/Settings.java:13327:        // prepare string to throw SecurityException
pie-security-release/core/java/android/provider/Settings.java:13341:        throw new SecurityException(exceptionMessage.toString());
pie-security-release/core/java/android/provider/MediaStore.java:293:     * java.lang.SecurityException}.
pie-security-release/core/java/android/provider/MediaStore.java:347:     * java.lang.SecurityException}.
pie-security-release/core/java/android/webkit/WebSettings.java:899:     * a value of {@code false} will cause a {@link java.lang.SecurityException}
pie-security-release/core/java/android/app/Instrumentation.java:2010:                throw new SecurityException("Not allowed to start activity "
pie-security-release/core/java/android/app/Instrumentation.java:2019:                throw new SecurityException(
pie-security-release/core/java/android/app/NotificationManager.java:718:     * Throws a SecurityException if policy access is granted to this package.
pie-security-release/core/java/android/app/NotificationManager.java:741:     * Throws a SecurityException if policy access is granted to this package.
pie-security-release/core/java/android/app/NotificationManager.java:761:     * Throws a SecurityException if policy access is granted to this package.
pie-security-release/core/java/android/app/NotificationManager.java:780:     * Throws a SecurityException if policy access is granted to this package.
pie-security-release/core/java/android/app/NotificationManager.java:802:     * Throws a SecurityException if policy access is granted to this package.
pie-security-release/core/java/android/app/ActivityThread.java:1975:                    throw new SecurityException(
pie-security-release/core/java/android/app/ActivityThread.java:2021:                throw new SecurityException(msg);
pie-security-release/core/java/android/app/StatsManager.java:112:            } catch (SecurityException e) {
pie-security-release/core/java/android/app/StatsManager.java:147:            } catch (SecurityException e) {
pie-security-release/core/java/android/app/StatsManager.java:215:            } catch (SecurityException e) {
pie-security-release/core/java/android/app/StatsManager.java:268:            } catch (SecurityException e) {
pie-security-release/core/java/android/app/StatsManager.java:305:            } catch (SecurityException e) {
pie-security-release/core/java/android/app/StatsManager.java:341:            } catch (SecurityException e) {
pie-security-release/core/java/android/app/ActivityManager.java:1703:            throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:1855:     * @throws SecurityException
pie-security-release/core/java/android/app/ActivityManager.java:1992:            throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:2011:            throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:2039:            boolean animate, Rect initialBounds, boolean showRecents) throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:2056:    public void resizeStack(int stackId, Rect bounds) throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:2073:    public void removeStacksInWindowingModes(int[] windowingModes) throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:2088:    public void removeStacksWithActivityTypes(int[] activityTypes) throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:2487:            throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:2502:            throws SecurityException {
pie-security-release/core/java/android/app/ActivityManager.java:3513:     * @throws SecurityException If the caller does not hold
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:116: * owns. Otherwise, a {@link SecurityException} will be thrown.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:1910:     * @throws SecurityException if the caller is not in the owner application of {@code admin}.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:1931:     * @throws SecurityException if {@code admin} is not an active administrator.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2094:     * @throws SecurityException if {@code admin} is not an active administrator or if {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2158:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2221:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2290:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2359:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2427:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2495:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2562:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2631:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2669:     * @throws SecurityException if {@code admin} is not an active administrator or {@code admin}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2786:     * @throws SecurityException if the calling application does not own an active administrator
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2809:     * @throws SecurityException if {@code admin} is not a profile owner of a managed profile.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2831:     * @throws SecurityException if {@code userHandle} is not a managed profile.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2858:     * @throws SecurityException if the calling application does not own an active administrator
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:2923:     * @throws SecurityException if {@code admin} is not an active administrator or does not use
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3009:     * throw {@link SecurityException}. Please use the new API {@link #resetPasswordWithToken}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3040:     * @throws SecurityException if the calling application does not own an active administrator
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3084:     * @throws SecurityException if admin is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3104:     * @throws SecurityException if admin is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3123:     * @throws SecurityException if admin is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3164:     * @throws SecurityException if admin is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3195:     * @throws SecurityException if {@code admin} is not an active administrator or it does not use
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3251:     * a {@link SecurityException} will be thrown.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3269:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3343:     * @throws SecurityException if the calling application does not own an active administrator
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3361:     * @throws SecurityException if the calling application does not own an active administrator
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3393:     * other admins a {@link SecurityException} will be thrown.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3414:     * @throws SecurityException if the calling application does not own an active administrator
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3438:     * @throws SecurityException if the calling application does not own an active administrator
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3552:     * @throws SecurityException if {@code admin} is not the device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3761:     * @throws SecurityException if {@code admin} is not an active administrator or does not use
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3884:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3911:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3938:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3968:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:3989:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4026:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4058:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4098:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4139:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4181:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4265:     * @throws SecurityException if {@code admin} is not {@code null} and not a device or profile
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4319:     * @throws SecurityException if {@code admin} is not a device or a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4326:            installerPackage) throws SecurityException {
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4345:     * @throws SecurityException if {@code admin} is not a device or a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4352:            throws SecurityException {
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4382:     * @throws SecurityException if {@code admin} is not a device or a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4406:     * @throws SecurityException if {@code admin} is not a device or a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4430:     * @throws SecurityException if {@code admin} is not a device or a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4466:     * @throws SecurityException if {@code admin} is not a device or a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4493:     * @throws SecurityException if {@code admin} is not a device or a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4520:     * @throws SecurityException if {@code admin} is not an active administrator or does not use
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4561:     * Otherwise a {@link SecurityException} will be thrown. See {@link #isAffiliatedUser}.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4567:     * @throws SecurityException if {@code admin} is not a device owner, or there is at least one
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4608:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4655:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4694:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4711:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:4769:     * @throws SecurityException if {@code admin} is not an active administrator or does not user
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5118:     * @throws SecurityException if the caller is not in {@code packageName} or {@code packageName}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5157:     * @throws SecurityException if the caller is not the device owner, does not hold the
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5253:     * a SecurityException will be thrown. This method is not available to managed profile owners.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5260:     * @throws SecurityException if {@code admin} is not an active profile owner, or the method is
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5341:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5389:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5417:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5443:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5465:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5585:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5608:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5630:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5659:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5688:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5764:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5811:     * @throws SecurityException if {@code admin} is not an active administrator or does not use
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5871:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5892:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5932:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:5954:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6025:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6048:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6092:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6118:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6148:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6171:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6252:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6276:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6358:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6452:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6590:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6616:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6633:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6656:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6679:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6702:     * @throws SecurityException if {@code admin} is not a profile owner affiliated with the device.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6722:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6768:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6796:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6818:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6840:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6894:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6921:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6945:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6970:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:6997:     * @throws SecurityException if {@code admin} is not the device owner, or the profile owner of
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7035:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7093:     * @throws SecurityException if {@code admin} is not the device owner, the profile owner of an
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7102:            throws SecurityException {
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7116:     * @throws SecurityException if {@code admin} is not the device owner, the profile owner of an
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7165:     * @throws SecurityException if {@code admin} is not the device owner, the profile owner of an
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7185:     * @throws SecurityException if {@code admin} is not the device owner, the profile owner of an
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7238:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7278:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7300:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7324:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7366:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7389:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7409:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7427:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7450:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7480:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7506:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7533:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7558:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7580:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7610:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7679:     * @throws SecurityException if {@code admin} is not the device owner, or a profile owner of
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7707:     * @throws SecurityException if {@code admin} is not the device owner, or a profile owner of
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7782:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7810:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7866:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7902:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:7998:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8014:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8041:     * @throws SecurityException if {@code admin} is not an active administrator.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8061:     * @throws SecurityException if {@code admin} is not an active administrator.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8087:     * @throws SecurityException if {@code admin} is not an active administrator.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8107:     * @throws SecurityException if {@code admin} is not an active administrator.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8169:     * throw a SecurityException when called on the parent instance:
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8209:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8215:                throw new SecurityException("The current user does not have a parent profile.");
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8237:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8253:     * <p>Can only be called by the device owner, otherwise a {@link SecurityException} will be
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8258:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8277:     * device. Otherwise a {@link SecurityException} will be thrown. See {@link #isAffiliatedUser}.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8282:     * @throws SecurityException if {@code admin} is not a device owner, or there is at least one
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8328:            throw new SecurityException("The user " + uInfo.id
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8340:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8361:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8383:     * @throws SecurityException if the caller doesn't run with {@link Process#SYSTEM_UID}
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8408:     * device. Otherwise a {@link SecurityException} will be thrown. See {@link #isAffiliatedUser}.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8413:     * @throws SecurityException if {@code admin} is not a device owner, or there is at least one
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8443:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8483:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8519:     * @throws SecurityException if {@code admin} is not a device or profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8536:     * @throws SecurityException if {@code admin} is not a profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8551:     * @throws SecurityException if the caller is not the device owner, does not hold the
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8715:     * @throws SecurityException if the caller is not shell / root or the admin package
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8787:     * @throws {@link SecurityException} if the caller has no
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8801:            throw new SecurityException(functionName + " cannot be called on the parent instance");
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8815:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8858:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8931:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8950:     * @throws SecurityException if {@code admin} is not a device owner and caller has
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8977:     * {@link SecurityException} until all users become affiliated again. It will also no longer be
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:8987:     * @throws SecurityException if {@code admin} is not a device owner, or there is at least one
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9021:     *        {@link #getBindDeviceAdminTargetUsers}, otherwise a {@link SecurityException} will
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9072:     * @throws SecurityException if the caller is not the device owner, does not hold the
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9091:     * @throws SecurityException if the caller is not the device owner, does not hold the
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9111:     * @throws SecurityException if the caller is not the device owner, does not hold the
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9131:     * @throws SecurityException if the caller is not the device owner/profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9153:     * @throws SecurityException if the caller does not have permission to retrieve information
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9179:     * @throws SecurityException if the caller is not the device owner/profile owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9206:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9296:     * @throws SecurityException if {@code admin} is not a device owner nor a profile owner
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9323:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9348:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9364:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9379:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9416:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9446:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9473:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9494:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9518:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9536:     * @throws SecurityException if {@code admin} is not a device owner.
pie-security-release/core/java/android/app/admin/DevicePolicyManager.java:9567:     * @throws SecurityException if the caller is not a device or profile owner.
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:167:            long startTime, long endTime) throws SecurityException, RemoteException {
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:200:            long startTime, long endTime) throws SecurityException, RemoteException {
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:233:            long endTime) throws SecurityException, RemoteException {
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:270:            long endTime) throws SecurityException, RemoteException {
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:292:            long startTime, long endTime, int uid) throws SecurityException {
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:303:            long startTime, long endTime, int uid, int tag) throws SecurityException {
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:334:     * @throws SecurityException if permissions are insufficient to read network statistics.
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:337:            long startTime, long endTime, int uid, int tag, int state) throws SecurityException {
pie-security-release/core/java/android/app/usage/NetworkStatsManager.java:380:            long endTime) throws SecurityException, RemoteException {
pie-security-release/core/java/android/app/usage/NetworkStats.java:106:            throws RemoteException, SecurityException {
pie-security-release/core/java/android/app/usage/UsageStatsManager.java:508:     * @param packageName the package name of the app to set the bucket for. A SecurityException
pie-security-release/core/java/android/app/usage/UsageStatsManager.java:512:     *               STANDBY_BUCKET_NEVER will result in a SecurityException.
pie-security-release/core/java/android/app/usage/UsageStatsManager.java:593:     * @throws SecurityException if the caller doesn't have the OBSERVE_APP_USAGE permission or
pie-security-release/core/java/android/app/usage/UsageStatsManager.java:614:     * @throws SecurityException if the caller doesn't have the OBSERVE_APP_USAGE permission or is
pie-security-release/core/java/android/app/SearchableInfo.java:265:        } catch (java.lang.SecurityException e) {
pie-security-release/core/java/android/app/SearchableInfo.java:291:            } catch (java.lang.SecurityException e) {
pie-security-release/core/java/android/app/RecoverableSecurityException.java:30: * Specialization of {@link SecurityException} that contains additional
pie-security-release/core/java/android/app/RecoverableSecurityException.java:46: * {@link SecurityException}, and thus there is no guarantee that the messages
pie-security-release/core/java/android/app/RecoverableSecurityException.java:51:public final class RecoverableSecurityException extends SecurityException implements Parcelable {
pie-security-release/core/java/android/app/RecoverableSecurityException.java:52:    private static final String TAG = "RecoverableSecurityException";
pie-security-release/core/java/android/app/RecoverableSecurityException.java:58:    public RecoverableSecurityException(Parcel in) {
pie-security-release/core/java/android/app/RecoverableSecurityException.java:59:        this(new SecurityException(in.readString()), in.readCharSequence(),
pie-security-release/core/java/android/app/RecoverableSecurityException.java:81:    public RecoverableSecurityException(Throwable cause, CharSequence userMessage,
pie-security-release/core/java/android/app/RecoverableSecurityException.java:90:    public RecoverableSecurityException(Throwable cause, CharSequence userMessage,
pie-security-release/core/java/android/app/RecoverableSecurityException.java:190:     * {@link RecoverableSecurityException#showAsDialog(Activity)}; needs to
pie-security-release/core/java/android/app/RecoverableSecurityException.java:198:            final RecoverableSecurityException e = getArguments().getParcelable(TAG);
pie-security-release/core/java/android/app/RecoverableSecurityException.java:224:    public static final Creator<RecoverableSecurityException> CREATOR =
pie-security-release/core/java/android/app/RecoverableSecurityException.java:225:            new Creator<RecoverableSecurityException>() {
pie-security-release/core/java/android/app/RecoverableSecurityException.java:227:        public RecoverableSecurityException createFromParcel(Parcel source) {
pie-security-release/core/java/android/app/RecoverableSecurityException.java:228:            return new RecoverableSecurityException(source);
pie-security-release/core/java/android/app/RecoverableSecurityException.java:232:        public RecoverableSecurityException[] newArray(int size) {
pie-security-release/core/java/android/app/RecoverableSecurityException.java:233:            return new RecoverableSecurityException[size];
pie-security-release/core/java/android/app/AuthenticationRequiredException.java:27: * Specialization of {@link SecurityException} that is thrown when authentication is needed from the
pie-security-release/core/java/android/app/AuthenticationRequiredException.java:35: * {@link SecurityException}, and thus there is no guarantee that the action contained will be
pie-security-release/core/java/android/app/AuthenticationRequiredException.java:39:public final class AuthenticationRequiredException extends SecurityException implements Parcelable {
pie-security-release/core/java/android/app/AuthenticationRequiredException.java:46:        this(new SecurityException(in.readString()), PendingIntent.CREATOR.createFromParcel(in));
pie-security-release/core/java/android/app/ContextImpl.java:1568:                    throw new SecurityException(
pie-security-release/core/java/android/app/ContextImpl.java:1572:                    throw new SecurityException(
pie-security-release/core/java/android/app/ContextImpl.java:1599:                throw new SecurityException(
pie-security-release/core/java/android/app/ContextImpl.java:1677:                throw new SecurityException(
pie-security-release/core/java/android/app/ContextImpl.java:1808:            throw new SecurityException(
pie-security-release/core/java/android/app/ContextImpl.java:1976:            throw new SecurityException(
pie-security-release/core/java/android/app/ContextImpl.java:2495:                throw new SecurityException("MODE_WORLD_READABLE no longer supported");
pie-security-release/core/java/android/app/ContextImpl.java:2498:                throw new SecurityException("MODE_WORLD_WRITEABLE no longer supported");
pie-security-release/core/java/android/app/ActivityOptions.java:1141:     * {@code false} for the package of the target activity, a {@link SecurityException} will be
pie-security-release/core/java/android/app/AppOpsManager.java:73:     * MODE_ERRORED (throw a SecurityException back to the caller; the normal operation calls
pie-security-release/core/java/android/app/AppOpsManager.java:101:     * cause it to have a fatal error, typically a {@link SecurityException}.
pie-security-release/core/java/android/app/AppOpsManager.java:2084:    private String buildSecurityExceptionMsg(int op, int uid, String packageName) {
pie-security-release/core/java/android/app/AppOpsManager.java:2124:     * @throws SecurityException If the app has been configured to crash on this op.
pie-security-release/core/java/android/app/AppOpsManager.java:2131:     * Like {@link #checkOp} but instead of throwing a {@link SecurityException} it
pie-security-release/core/java/android/app/AppOpsManager.java:2163:     * @throws SecurityException If the app has been configured to crash on this op.
pie-security-release/core/java/android/app/AppOpsManager.java:2170:     * Like {@link #noteOp} but instead of throwing a {@link SecurityException} it
pie-security-release/core/java/android/app/AppOpsManager.java:2190:     * @throws SecurityException If the app has been configured to crash on this op.
pie-security-release/core/java/android/app/AppOpsManager.java:2198:     * of throwing a {@link SecurityException} it returns {@link #MODE_ERRORED}.
pie-security-release/core/java/android/app/AppOpsManager.java:2218:     * @throws SecurityException If the app has been configured to crash on this op.
pie-security-release/core/java/android/app/AppOpsManager.java:2225:     * Like {@link #startOp} but instead of throwing a {@link SecurityException} it
pie-security-release/core/java/android/app/AppOpsManager.java:2267:     * @throws SecurityException If the app has been configured to crash on this op.
pie-security-release/core/java/android/app/AppOpsManager.java:2274:                throw new SecurityException(buildSecurityExceptionMsg(op, uid, packageName));
pie-security-release/core/java/android/app/AppOpsManager.java:2283:     * Like {@link #checkOp} but instead of throwing a {@link SecurityException} it
pie-security-release/core/java/android/app/AppOpsManager.java:2299:     * @throws SecurityException if the package name doesn't belong to the given
pie-security-release/core/java/android/app/AppOpsManager.java:2305:                throw new SecurityException(
pie-security-release/core/java/android/app/AppOpsManager.java:2321:                throw new SecurityException(buildSecurityExceptionMsg(op, uid, packageName));
pie-security-release/core/java/android/app/AppOpsManager.java:2330:     * Like {@link #checkAudioOp} but instead of throwing a {@link SecurityException} it
pie-security-release/core/java/android/app/AppOpsManager.java:2354:     * @throws SecurityException If the app has been configured to crash on this op.
pie-security-release/core/java/android/app/AppOpsManager.java:2360:            throw new SecurityException(buildSecurityExceptionMsg(op, uid, packageName));
pie-security-release/core/java/android/app/AppOpsManager.java:2378:     * @throws SecurityException If the proxy or proxied app has been configured to
pie-security-release/core/java/android/app/AppOpsManager.java:2386:            throw new SecurityException("Proxy package " + mContext.getOpPackageName()
pie-security-release/core/java/android/app/AppOpsManager.java:2396:     * of throwing a {@link SecurityException} it returns {@link #MODE_ERRORED}.
pie-security-release/core/java/android/app/AppOpsManager.java:2409:     * Like {@link #noteOp} but instead of throwing a {@link SecurityException} it
pie-security-release/core/java/android/app/AppOpsManager.java:2461:     * @throws SecurityException If the app has been configured to crash on this op.
pie-security-release/core/java/android/app/AppOpsManager.java:2482:     * @throws SecurityException If the app has been configured to crash on this op or
pie-security-release/core/java/android/app/AppOpsManager.java:2490:            throw new SecurityException(buildSecurityExceptionMsg(op, uid, packageName));
pie-security-release/core/java/android/app/AppOpsManager.java:2496:     * Like {@link #startOp} but instead of throwing a {@link SecurityException} it
pie-security-release/core/java/android/app/AppOpsManager.java:2506:     * {@link SecurityException} it returns {@link #MODE_ERRORED}.
pie-security-release/core/java/android/app/WallpaperManager.java:415:                } catch (SecurityException e) {
pie-security-release/core/java/android/app/WallpaperManager.java:976:            } catch (SecurityException e) {
pie-security-release/core/java/android/app/UiAutomationConnection.java:468:            throw new SecurityException("Calling from not trusted UID!");
pie-security-release/core/java/android/app/slice/SliceManager.java:124:     * or the default voice interaction service. Otherwise will throw {@link SecurityException}.
pie-security-release/core/java/android/app/slice/SliceManager.java:156:     * or the default voice interaction service. Otherwise will throw {@link SecurityException}.
pie-security-release/core/java/android/app/slice/SliceManager.java:488:                throw new SecurityException("No pkg specified");
pie-security-release/core/java/android/app/slice/SliceManager.java:492:                throw new SecurityException("User " + uid + " does not have slice permission for "
pie-security-release/core/java/android/app/slice/SliceProvider.java:391:                throw new SecurityException("Only the system can pin/unpin slices");
pie-security-release/core/java/android/app/slice/SliceProvider.java:398:                throw new SecurityException("Only the system can pin/unpin slices");
pie-security-release/core/java/android/app/slice/SliceProvider.java:410:                throw new SecurityException("Only the system can get permissions");
pie-security-release/core/java/android/app/slice/SliceProvider.java:457:        } catch (SecurityException e) {
pie-security-release/core/java/android/app/backup/BackupManager.java:475:     * {@link SecurityException} will be thrown.
pie-security-release/core/java/android/app/backup/BackupManager.java:492:     * @throws SecurityException If the UID of the calling process differs from the package UID of
pie-security-release/core/java/android/app/backup/IBackupManager.aidl:228:     * {@link SecurityException} will be thrown.
pie-security-release/core/java/android/app/backup/IBackupManager.aidl:245:     * @throws SecurityException If the UID of the calling process differs from the package UID of
pie-security-release/core/java/android/app/DownloadManager.java:1213:            throw new SecurityException(displayName + " is not a valid filename");
pie-security-release/core/java/android/app/DownloadManager.java:1519:                        throw new SecurityException(
pie-security-release/core/java/android/app/UiAutomation.java:903:     * @throws SecurityException if unable to grant the permission.
pie-security-release/core/java/android/app/UiAutomation.java:926:     * @throws SecurityException if unable to grant the permission.
pie-security-release/core/java/android/app/UiAutomation.java:941:            throw new SecurityException("Error granting runtime permission", e);
pie-security-release/core/java/android/app/UiAutomation.java:949:     * @throws SecurityException if unable to revoke the permission.
pie-security-release/core/java/android/app/UiAutomation.java:972:     * @throws SecurityException if unable to revoke the permission.
pie-security-release/core/java/android/app/UiAutomation.java:987:            throw new SecurityException("Error granting runtime permission", e);
pie-security-release/core/java/android/service/oemlock/OemLockManager.java:58:     * @throws SecurityException if the wrong signature was provided.
pie-security-release/core/java/android/service/oemlock/OemLockManager.java:92:     * @throws SecurityException if the user is not allowed to unlock the device.
pie-security-release/core/java/android/service/autofill/AutofillServiceInfo.java:102:                throw new SecurityException("Service does not require permission "
pie-security-release/core/java/android/os/HardwarePropertiesManager.java:120:     * @throws SecurityException if something other than the device owner or the current VR service
pie-security-release/core/java/android/os/HardwarePropertiesManager.java:158:     * @throws SecurityException if something other than the device owner or the current VR service
pie-security-release/core/java/android/os/HardwarePropertiesManager.java:175:     * @throws SecurityException if something other than the device owner or the current VR service
pie-security-release/core/java/android/os/UserManager.java:2415:     * @throws SecurityException if the caller is invalid
pie-security-release/core/java/android/os/SystemUpdateManager.java:111:     * @throws SecurityException if the caller is not allowed to read the info.
pie-security-release/core/java/android/os/SystemUpdateManager.java:138:     * @throws SecurityException if the caller is not allowed to update the info.
pie-security-release/core/java/android/os/SystemClock.java:160:        } catch (SecurityException e) {
pie-security-release/core/java/android/os/RecoverySystem.java:53:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/os/RecoverySystem.java:158:        throws IOException, GeneralSecurityException {
pie-security-release/core/java/android/os/RecoverySystem.java:193:     * SecurityException being thrown (and the thread's interrupt flag
pie-security-release/core/java/android/os/RecoverySystem.java:207:     * @throws GeneralSecurityException if verification failed
pie-security-release/core/java/android/os/RecoverySystem.java:212:        throws IOException, GeneralSecurityException {
pie-security-release/core/java/android/os/RecoverySystem.java:687:     * @throws SecurityException if the current user is not allowed to wipe data.
pie-security-release/core/java/android/os/RecoverySystem.java:731:     * @throws SecurityException if the current user is not allowed to wipe data.
pie-security-release/core/java/android/os/RecoverySystem.java:739:            throw new SecurityException("Wiping data is not allowed for this user.");
pie-security-release/core/java/android/os/Build.java:832:         * will throw a SecurityException if the caller does not have permission to access
pie-security-release/core/java/android/os/Debug.java:2383:     * throw a SecurityException.
pie-security-release/core/java/android/os/Debug.java:2390:     * @throws SecurityException if the app is not debuggable.
pie-security-release/core/java/android/os/Binder.java:572:            } catch (SecurityException e) {
pie-security-release/core/java/android/os/HwParcel.java:279:     * @throws SecurityException interface doesn't match
pie-security-release/core/java/android/os/Process.java:686:     * @throws SecurityException Throws SecurityException if your process does
pie-security-release/core/java/android/os/Process.java:691:            throws IllegalArgumentException, SecurityException;
pie-security-release/core/java/android/os/Process.java:710:     * @throws SecurityException Throws SecurityException if your process does
pie-security-release/core/java/android/os/Process.java:720:            throws IllegalArgumentException, SecurityException;
pie-security-release/core/java/android/os/Process.java:730:     * @throws SecurityException Throws SecurityException if your process does
pie-security-release/core/java/android/os/Process.java:735:            throws IllegalArgumentException, SecurityException;
pie-security-release/core/java/android/os/Process.java:745:     * @throws SecurityException Throws SecurityException if your process does
pie-security-release/core/java/android/os/Process.java:758:            throws IllegalArgumentException, SecurityException;
pie-security-release/core/java/android/os/Process.java:766:            throws IllegalArgumentException, SecurityException;
pie-security-release/core/java/android/os/Process.java:802:     * @throws SecurityException Throws SecurityException if your process does
pie-security-release/core/java/android/os/Process.java:809:            throws IllegalArgumentException, SecurityException;
pie-security-release/core/java/android/os/Process.java:834:     * @throws SecurityException Throws SecurityException if your process does
pie-security-release/core/java/android/os/Process.java:854:     * @throws SecurityException Throws SecurityException if your process does
pie-security-release/core/java/android/os/Parcel.java:1739:     * <li>{@link SecurityException}
pie-security-release/core/java/android/os/Parcel.java:1756:        } else if (e instanceof SecurityException) {
pie-security-release/core/java/android/os/Parcel.java:1950:                return new SecurityException(msg);
pie-security-release/core/java/android/os/ShellCommand.java:105:        } catch (SecurityException e) {
pie-security-release/core/java/android/os/UserManagerInternal.java:199:     * @throws SecurityException if the calling user and {@code targetUser} are not in the same
pie-security-release/core/java/android/os/UserManagerInternal.java:200:     * group and {@code throwSecurityException} is true, otherwise if will simply return false.
pie-security-release/core/java/android/os/UserManagerInternal.java:203:            String debugMsg, boolean throwSecurityException);
pie-security-release/core/java/android/util/apk/ApkVerityBuilder.java:70:            throws IOException, SecurityException, NoSuchAlgorithmException, DigestException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:105:     * @throws SecurityException if a APK Signature Scheme v2 signature of this APK does not verify.
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:109:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:124:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:130:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:141:     * @throws SecurityException if an APK Signature Scheme v2 signature of this APK does not
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:146:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:173:            boolean doVerifyIntegrity) throws SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:187:            throw new SecurityException("Failed to read list of signers", e);
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:195:            } catch (IOException | BufferUnderflowException | SecurityException e) {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:196:                throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:203:            throw new SecurityException("No signers found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:207:            throw new SecurityException("No content digests found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:229:            CertificateFactory certFactory) throws SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:243:                    throw new SecurityException("Signature record too short");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:256:                throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:263:                throw new SecurityException("No signatures found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:265:                throw new SecurityException("No supported signatures found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:288:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:292:            throw new SecurityException(jcaSignatureAlgorithm + " signature did not verify");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:320:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:327:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:343:                throw new SecurityException("Failed to decode certificate #" + certificateCount, e);
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:351:            throw new SecurityException("No certificates listed");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:356:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:370:            throws SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:387:                        throw new SecurityException("V2 signature indicates APK is signed using APK"
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:400:            throws IOException, SignatureNotFoundException, SecurityException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV2Verifier.java:409:            throws IOException, SignatureNotFoundException, SecurityException, DigestException,
pie-security-release/core/java/android/util/apk/ApkSignatureVerifier.java:40:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/util/apk/ApkSignatureVerifier.java:230:        } catch (GeneralSecurityException e) {
pie-security-release/core/java/android/util/apk/ApkSignatureVerifier.java:401:            throws IOException, SignatureNotFoundException, SecurityException {
pie-security-release/core/java/android/util/apk/ApkSignatureVerifier.java:418:            throws IOException, SignatureNotFoundException, SecurityException, DigestException,
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:90:            SignatureInfo signatureInfo) throws SecurityException {
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:92:            throw new SecurityException("No digests provided");
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:112:                throw new SecurityException("Cannot get FD", e);
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:123:            throw new SecurityException("No known digest exists for integrity check");
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:130:            SignatureInfo signatureInfo) throws SecurityException {
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:169:            throw new SecurityException("Failed to compute digest(s) of contents", e);
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:176:                throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:304:            byte[] data, long fileSize, SignatureInfo signatureInfo) throws SecurityException {
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:313:            throw new SecurityException("Verity digest size is wrong: " + data.length);
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:322:            throw new SecurityException("APK content size did not verify");
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:331:            SignatureInfo signatureInfo) throws SecurityException {
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:343:                throw new SecurityException("APK verity digest of contents did not verify");
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:346:            throw new SecurityException("Error during verification", e);
pie-security-release/core/java/android/util/apk/ApkSigningBlockUtils.java:361:            throws IOException, SignatureNotFoundException, SecurityException, DigestException,
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:102:     * @throws SecurityException if the APK Signature Scheme v3 signature of this APK does not
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:107:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:121:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:126:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:137:     * @throws SecurityException if an APK Signature Scheme v3 signature of this APK does not
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:142:            throws SignatureNotFoundException, SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:169:            boolean doVerifyIntegrity) throws SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:183:            throw new SecurityException("Failed to read list of signers", e);
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:193:            } catch (IOException | BufferUnderflowException | SecurityException e) {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:194:                throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:201:            throw new SecurityException("No signers found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:205:            throw new SecurityException("APK Signature Scheme V3 only supports one signer: "
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:210:            throw new SecurityException("No content digests found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:230:            throws SecurityException, IOException, PlatformNotSupportedException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:256:                    throw new SecurityException("Signature record too short");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:269:                throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:276:                throw new SecurityException("No signatures found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:278:                throw new SecurityException("No supported signatures found");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:301:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:305:            throw new SecurityException(jcaSignatureAlgorithm + " signature did not verify");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:333:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:340:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:356:                throw new SecurityException("Failed to decode certificate #" + certificateCount, e);
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:364:            throw new SecurityException("No certificates listed");
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:369:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:375:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:381:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:406:                        throw new SecurityException("Encountered multiple Proof-of-rotation records"
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:416:                            throw new SecurityException("Terminal certificate in Proof-of-rotation"
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:420:                        throw new SecurityException("Failed to encode certificate when comparing"
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:436:            throws SecurityException, IOException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:482:                        throw new SecurityException("Unable to verify signature of certificate #"
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:492:                    throw new SecurityException("Signing algorithm ID mismatch for certificate #"
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:501:                    throw new SecurityException("Encountered duplicate entries in "
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:513:            throw new SecurityException(
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:517:            throw new SecurityException("Failed to decode certificate #" + levelCount
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:524:            throws IOException, SignatureNotFoundException, SecurityException {
pie-security-release/core/java/android/util/apk/ApkSignatureSchemeV3Verifier.java:533:            throws IOException, SignatureNotFoundException, SecurityException, DigestException,
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:26:import java.security.GeneralSecurityException;
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:143:         * @throws SecurityException
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:157:    private static SecurityException invalidDigest(String signatureFile, String name,
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:159:        throw new SecurityException(signatureFile + " has invalid digest for " + name +
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:163:    private static SecurityException failedVerification(String jarName, String signatureFile) {
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:164:        throw new SecurityException(jarName + " failed verification of " + signatureFile);
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:167:    private static SecurityException failedVerification(String jarName, String signatureFile,
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:169:        throw new SecurityException(jarName + " failed verification of " + signatureFile, e);
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:286:     * @throws SecurityException
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:310:     * certificates listed in the PKCS7 block. Throws a {@code GeneralSecurityException}
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:314:        throws GeneralSecurityException {
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:323:                throw new GeneralSecurityException(
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:335:                throw new GeneralSecurityException(
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:339:                throw new GeneralSecurityException(
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:345:            throw new GeneralSecurityException("IO exception verifying jar cert", e);
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:374:        } catch (GeneralSecurityException e) {
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:426:                    throw new SecurityException(signatureFile + " indicates " + jarName
pie-security-release/core/java/android/util/jar/StrictJarVerifier.java:431:                    throw new SecurityException(signatureFile + " indicates " + jarName
pie-security-release/core/java/android/util/jar/StrictJarFile.java:65:            throws IOException, SecurityException {
pie-security-release/core/java/android/util/jar/StrictJarFile.java:70:            throws IOException, SecurityException {
pie-security-release/core/java/android/util/jar/StrictJarFile.java:77:                    throws IOException, SecurityException {
pie-security-release/core/java/android/util/jar/StrictJarFile.java:85:                    throws IOException, SecurityException {
pie-security-release/core/java/android/util/jar/StrictJarFile.java:104:                    throws IOException, SecurityException {
pie-security-release/core/java/android/util/jar/StrictJarFile.java:124:                        throw new SecurityException("File " + file + " in manifest does not exist");
pie-security-release/core/java/android/util/jar/StrictJarFile.java:134:        } catch (IOException | SecurityException e) {
pie-security-release/core/java/android/hardware/location/GeofenceHardwareService.java:62:            throw new SecurityException("Insufficient permissions to access hardware geofence for"
pie-security-release/core/java/android/hardware/display/DisplayManager.java:602:     * @throws SecurityException if the caller does not have permission to create
pie-security-release/core/java/android/hardware/camera2/marshal/impl/MarshalQueryableEnum.java:125:                    } catch (SecurityException e) {
pie-security-release/core/java/android/hardware/camera2/CameraManager.java:307:     * @throws SecurityException if the application does not have permission to
pie-security-release/core/java/android/hardware/camera2/CameraManager.java:459:     * @throws SecurityException if the application does not have permission to
pie-security-release/core/java/android/hardware/camera2/CameraManager.java:496:     * @throws SecurityException if the application does not have permission to
pie-security-release/core/java/android/hardware/camera2/CameraManager.java:722:                    throw new SecurityException(e.getMessage(), e);
pie-security-release/core/java/android/content/Context.java:135:     * mode throws a {@link SecurityException}.
pie-security-release/core/java/android/content/Context.java:155:     * mode will throw a {@link SecurityException}.
pie-security-release/core/java/android/content/Context.java:2487:     * permission, {@link SecurityException} will be thrown.
pie-security-release/core/java/android/content/Context.java:2734:     * <p>This function will throw {@link SecurityException} if you do not
pie-security-release/core/java/android/content/Context.java:2755:     * @throws SecurityException If the caller does not have permission to access the service
pie-security-release/core/java/android/content/Context.java:2786:     * @throws SecurityException If the caller does not have permission to access the service
pie-security-release/core/java/android/content/Context.java:2814:     * <p>This function will throw {@link SecurityException} if you do not
pie-security-release/core/java/android/content/Context.java:2824:     * @throws SecurityException If the caller does not have permission to access the service
pie-security-release/core/java/android/content/Context.java:2862:     * <p>This method will throw {@link SecurityException} if the calling app does not
pie-security-release/core/java/android/content/Context.java:2893:     * @throws SecurityException If the caller does not have permission to access the service
pie-security-release/core/java/android/content/Context.java:4298:     * and user ID running in the system, throw a {@link SecurityException}.
pie-security-release/core/java/android/content/Context.java:4314:     * SecurityException}.  This is basically the same as calling
pie-security-release/core/java/android/content/Context.java:4319:     * this function will always throw the SecurityException.  This is
pie-security-release/core/java/android/content/Context.java:4335:     * {@link SecurityException}.  This is the same as {@link
pie-security-release/core/java/android/content/Context.java:4392:     * function and a {@link SecurityException} would be thrown.  As of
pie-security-release/core/java/android/content/Context.java:4535:     * SecurityException}.  This only checks for permissions that have
pie-security-release/core/java/android/content/Context.java:4555:     * SecurityException}.  This is basically the same as calling
pie-security-release/core/java/android/content/Context.java:4561:     * will always throw a SecurityException.
pie-security-release/core/java/android/content/Context.java:4575:     * SecurityException}.  This is the same as {@link
pie-security-release/core/java/android/content/Context.java:4632:     * java.lang.SecurityException will be thrown.  If this flag is not set,
pie-security-release/core/java/android/content/Context.java:4688:     * <p>Throws {@link java.lang.SecurityException} if the Context requested
pie-security-release/core/java/android/content/Context.java:4697:     * @throws SecurityException &nbsp;
pie-security-release/core/java/android/content/ContentProvider.java:487:                IBinder callerToken) throws FileNotFoundException, SecurityException {
pie-security-release/core/java/android/content/ContentProvider.java:502:                throws SecurityException {
pie-security-release/core/java/android/content/ContentProvider.java:516:                throws SecurityException {
pie-security-release/core/java/android/content/ContentProvider.java:558:            throws SecurityException {
pie-security-release/core/java/android/content/ContentProvider.java:633:        throw new SecurityException("Permission Denial: reading "
pie-security-release/core/java/android/content/ContentProvider.java:640:            throws SecurityException {
pie-security-release/core/java/android/content/ContentProvider.java:707:        throw new SecurityException("Permission Denial: writing "
pie-security-release/core/java/android/content/ContentProvider.java:742:     * @throws SecurityException if the calling package doesn't belong to the
pie-security-release/core/java/android/content/ContentProvider.java:1409:     * @throws SecurityException Throws SecurityException if the caller does
pie-security-release/core/java/android/content/ContentProvider.java:1479:     * @throws SecurityException Throws SecurityException if the caller does
pie-security-release/core/java/android/content/ContentProvider.java:1536:     * @throws SecurityException Throws SecurityException if the caller does
pie-security-release/core/java/android/content/ContentProvider.java:1599:     * @throws SecurityException Throws SecurityException if the caller does
pie-security-release/core/java/android/content/ContentProvider.java:1712:     * @throws SecurityException Throws SecurityException if the caller does
pie-security-release/core/java/android/content/ContentProvider.java:1779:     * @throws SecurityException Throws SecurityException if the caller does
pie-security-release/core/java/android/content/ContentProvider.java:2015:    public Uri validateIncomingUri(Uri uri) throws SecurityException {
pie-security-release/core/java/android/content/ContentProvider.java:2020:                throw new SecurityException("trying to query a ContentProvider in user "
pie-security-release/core/java/android/content/ContentProvider.java:2032:            throw new SecurityException(message);
pie-security-release/core/java/android/content/Intent.java:1100:     * result in a {@link java.lang.SecurityException}.
pie-security-release/core/java/android/content/ClipData.java:352:                    } catch (SecurityException e) {
pie-security-release/core/java/android/content/ClipData.java:494:                } catch (SecurityException e) {
pie-security-release/core/java/android/content/ClipData.java:554:                    } catch (SecurityException e) {
pie-security-release/core/java/android/content/AbstractThreadedSyncAdapter.java:344:            } catch (SecurityException e) {
pie-security-release/core/java/android/content/AbstractThreadedSyncAdapter.java:346:                    Log.d(TAG, "SecurityException", e);
pie-security-release/core/java/android/content/AbstractThreadedSyncAdapter.java:348:                AbstractThreadedSyncAdapter.this.onSecurityException(mAccount, mExtras,
pie-security-release/core/java/android/content/AbstractThreadedSyncAdapter.java:462:    public void onSecurityException(Account account, Bundle extras,
pie-security-release/core/java/android/content/pm/LauncherApps.java:634:     * @throws SecurityException if {@link #hasShortcutHostPermission()} is false.
pie-security-release/core/java/android/content/pm/PackageInstaller.java:318:     * @throws SecurityException when installation services are unavailable,
pie-security-release/core/java/android/content/pm/PackageInstaller.java:349:     * @throws SecurityException when the caller does not own the session, or
pie-security-release/core/java/android/content/pm/PackageInstaller.java:368:     * @throws SecurityException when the caller does not own the session, or
pie-security-release/core/java/android/content/pm/PackageInstaller.java:383:     * @throws SecurityException when the caller does not own the session, or
pie-security-release/core/java/android/content/pm/PackageInstaller.java:401:     * @throws SecurityException when the caller does not own the session, or
pie-security-release/core/java/android/content/pm/PackageInstaller.java:826:         * @throws SecurityException if called after the session has been
pie-security-release/core/java/android/content/pm/PackageInstaller.java:892:         * @throws SecurityException if called after the session has been
pie-security-release/core/java/android/content/pm/PackageInstaller.java:914:         * @throws SecurityException if called after the session has been
pie-security-release/core/java/android/content/pm/PackageInstaller.java:962:         * @throws SecurityException if streams opened through
pie-security-release/core/java/android/content/pm/PackageInstaller.java:1008:         * will cause {@link SecurityException}s.
pie-security-release/core/java/android/content/pm/PackageInstaller.java:1017:         * @throws SecurityException if called after the session has been committed or abandoned.
pie-security-release/core/java/android/content/pm/PackageInstaller.java:1018:         * @throws SecurityException if the session does not update the original installer
pie-security-release/core/java/android/content/pm/PackageInstaller.java:1019:         * @throws SecurityException if streams opened through
pie-security-release/core/java/android/content/pm/ActivityInfo.java:475:     * this activity is launched into such a container a SecurityException will be
pie-security-release/core/java/android/content/pm/CrossProfileApps.java:58:     *        {@link android.content.Intent#CATEGORY_LAUNCHER}. Otherwise, SecurityException will
pie-security-release/core/java/android/content/pm/CrossProfileApps.java:61:     *        {@link #getTargetUserProfiles()}, otherwise a {@link SecurityException} will
pie-security-release/core/java/android/content/pm/CrossProfileApps.java:105:     *        {@link #getTargetUserProfiles()}, otherwise a {@link SecurityException} will
pie-security-release/core/java/android/content/pm/CrossProfileApps.java:127:     *        {@link #getTargetUserProfiles()}, otherwise a {@link SecurityException} will
pie-security-release/core/java/android/content/pm/CrossProfileApps.java:149:            throw new SecurityException("Not allowed to access " + userHandle);
pie-security-release/core/java/android/content/pm/PackageManager.java:3490:     * @throws SecurityException if you are not allowed to add the
pie-security-release/core/java/android/content/pm/PackageManager.java:3514:     * @throws SecurityException if you are not allowed to remove the
pie-security-release/core/java/android/content/pm/PackageManager.java:3542:     * java.lang.SecurityException} is thrown. If the package or permission is
pie-security-release/core/java/android/content/pm/PackageManager.java:3568:     * java.lang.SecurityException} is thrown. If the package or permission is
pie-security-release/core/java/android/content/pm/PackageManager.java:4862:     * @throws SecurityException if the caller does not have the
pie-security-release/core/java/android/content/pm/PackageManager.java:4896:     * @throws SecurityException if the caller does not have the
pie-security-release/core/java/android/content/pm/PackageManager.java:4916:     * @throws SecurityException if the caller does not have the
pie-security-release/core/java/android/content/pm/PackageManager.java:5043:     * <li> A SecurityException will be thrown if <var>installerPackageName</var>
pie-security-release/core/java/android/content/pm/PackageManager.java:5045:     * <li> A SecurityException will be thrown if <var>targetPackage</var> already
pie-security-release/core/java/android/net/VpnService.java:797:         * @throws SecurityException if the service is not properly declared
pie-security-release/core/java/android/net/ConnectivityManager.java:2016:            // AppOpsService throws SecurityException.
pie-security-release/core/java/android/net/ConnectivityManager.java:2201:        } catch (SecurityException e) {
pie-security-release/core/java/android/net/ConnectivityManager.java:3709:            } catch (SecurityException e) {
pie-security-release/core/java/android/net/NetworkScoreManager.java:229:     * @throws SecurityException if the caller doesn't hold either {@link permission#SCORE_NETWORKS}
pie-security-release/core/java/android/net/NetworkScoreManager.java:245:     * @throws SecurityException if the caller does not hold the
pie-security-release/core/java/android/net/NetworkScoreManager.java:263:     * @throws SecurityException if the caller does not hold the
pie-security-release/core/java/android/net/NetworkScoreManager.java:285:     * @throws SecurityException if the caller is not the active scorer.
pie-security-release/core/java/android/net/NetworkScoreManager.java:288:    public boolean updateScores(ScoredNetwork[] networks) throws SecurityException {
pie-security-release/core/java/android/net/NetworkScoreManager.java:306:     * @throws SecurityException if the caller is not the active scorer or if the caller doesn't
pie-security-release/core/java/android/net/NetworkScoreManager.java:311:    public boolean clearScores() throws SecurityException {
pie-security-release/core/java/android/net/NetworkScoreManager.java:326:     * @throws SecurityException if the caller doesn't hold either {@link permission#SCORE_NETWORKS}
pie-security-release/core/java/android/net/NetworkScoreManager.java:333:    public boolean setActiveScorer(String packageName) throws SecurityException {
pie-security-release/core/java/android/net/NetworkScoreManager.java:346:     * @throws SecurityException if the caller is not the active scorer or if the caller doesn't
pie-security-release/core/java/android/net/NetworkScoreManager.java:351:    public void disableScoring() throws SecurityException {
pie-security-release/core/java/android/net/NetworkScoreManager.java:363:     * @throws SecurityException if the caller does not hold the
pie-security-release/core/java/android/net/NetworkScoreManager.java:368:    public boolean requestScores(NetworkKey[] networks) throws SecurityException {
pie-security-release/core/java/android/net/NetworkScoreManager.java:381:     * @throws SecurityException if the caller does not hold the
pie-security-release/core/java/android/net/NetworkScoreManager.java:399:     * @throws SecurityException if the caller does not hold the
pie-security-release/core/java/android/net/NetworkScoreManager.java:419:     * @throws SecurityException if the caller does not hold the
pie-security-release/core/java/android/net/NetworkScoreManager.java:438:     * @throws SecurityException if the caller does not hold the
pie-security-release/core/java/android/net/INetworkScoreCache.aidl:28: * <p>A proper implementation should throw SecurityException whenever the caller is not privileged.
pie-security-release/core/java/android/net/NetworkSpecifier.java:43:     * should throw a SecurityException.
pie-security-release/core/java/android/net/INetworkScoreService.aidl:33:     * @throws SecurityException if the caller is not the current active scorer.
pie-security-release/core/java/android/net/INetworkScoreService.aidl:40:     * @throws SecurityException if the caller is neither the current active scorer nor the system.
pie-security-release/core/java/android/net/INetworkScoreService.aidl:48:     * @throws SecurityException if the caller is not the system or a network scorer.
pie-security-release/core/java/android/net/INetworkScoreService.aidl:54:     * @throws SecurityException if the caller is not the current scorer or the system.
pie-security-release/core/java/android/net/INetworkScoreService.aidl:64:     * @throws SecurityException if the caller is not the system
pie-security-release/core/java/android/net/INetworkScoreService.aidl:75:     * @throws SecurityException if the caller is not the system.
pie-security-release/core/java/android/net/INetworkScoreService.aidl:88:     * @throws SecurityException if the caller is not the system
pie-security-release/core/java/com/android/server/net/NetworkPinner.java:124:                } catch (SecurityException e) {
pie-security-release/core/java/com/android/server/net/NetworkPinner.java:138:                } catch (SecurityException e) {
pie-security-release/core/java/com/android/internal/widget/MessagingImageMessage.java:100:        } catch (IOException | SecurityException e) {
pie-security-release/core/java/com/android/internal/widget/LockPatternUtils.java:1557:            throw new SecurityException("Only available to system server itself");
pie-security-release/core/java/com/android/internal/app/ResolverActivity.java:568:        } catch (SecurityException e) {
pie-security-release/core/java/com/android/internal/app/ConfirmUserCreationActivity.java:87:            throw new SecurityException(
pie-security-release/core/java/com/android/internal/app/ConfirmUserCreationActivity.java:94:            throw new SecurityException(
pie-security-release/core/java/com/android/internal/inputmethod/InputMethodUtils.java:781:        } catch (SecurityException e) {
pie-security-release/core/java/com/android/internal/os/ZygoteConnection.java:175:            throw new ZygoteSecurityException("Client may not specify capabilities: " +
pie-security-release/core/java/com/android/internal/os/ZygoteConnection.java:750:     * @throws ZygoteSecurityException
pie-security-release/core/java/com/android/internal/os/ZygoteConnection.java:753:            throws ZygoteSecurityException {
pie-security-release/core/java/com/android/internal/os/ZygoteConnection.java:762:                throw new ZygoteSecurityException(
pie-security-release/core/java/com/android/internal/os/ZygoteConnection.java:805:     * @throws ZygoteSecurityException
pie-security-release/core/java/com/android/internal/os/ZygoteConnection.java:808:            throws ZygoteSecurityException {
pie-security-release/core/java/com/android/internal/os/ZygoteConnection.java:813:            throw new ZygoteSecurityException("Peer is permitted to specify an"
pie-security-release/core/java/com/android/internal/os/ZygoteSecurityException.java:22:class ZygoteSecurityException extends RuntimeException {
pie-security-release/core/java/com/android/internal/os/ZygoteSecurityException.java:23:    ZygoteSecurityException(String message) {
pie-security-release/core/java/com/android/internal/os/RuntimeInit.java:305:        } catch (SecurityException ex) {
pie-security-release/core/java/com/android/internal/util/MessageUtils.java:61:            } catch (SecurityException e) {
pie-security-release/core/java/com/android/internal/util/MessageUtils.java:106:                    } catch (SecurityException | IllegalAccessException e) {
pie-security-release/core/tests/coretests/src/android/view/PinchZoomAction.java:27:import android.support.test.espresso.InjectEventSecurityException;
pie-security-release/core/tests/coretests/src/android/view/PinchZoomAction.java:98:        } catch (InjectEventSecurityException e) {
pie-security-release/core/tests/coretests/src/android/view/PinchZoomAction.java:108:        } catch (InjectEventSecurityException e) {
pie-security-release/core/tests/coretests/src/android/view/PinchZoomAction.java:137:            } catch (InjectEventSecurityException e) {
pie-security-release/core/tests/coretests/src/android/view/PinchZoomAction.java:156:        } catch (InjectEventSecurityException e) {
pie-security-release/core/tests/coretests/src/android/view/PinchZoomAction.java:171:        } catch (InjectEventSecurityException e) {
pie-security-release/core/tests/coretests/src/android/widget/espresso/MouseUiController.java:25:import android.support.test.espresso.InjectEventSecurityException;
pie-security-release/core/tests/coretests/src/android/widget/espresso/MouseUiController.java:60:    public boolean injectKeyEvent(KeyEvent event) throws InjectEventSecurityException {
pie-security-release/core/tests/coretests/src/android/widget/espresso/MouseUiController.java:65:    public boolean injectMotionEvent(MotionEvent event) throws InjectEventSecurityException {
pie-security-release/core/tests/coretests/src/android/widget/espresso/MouseUiController.java:75:    public boolean injectString(String str) throws InjectEventSecurityException {
pie-security-release/core/tests/coretests/src/android/app/DownloadManagerFunctionalTest.java:236:                fail("Failed to throw SecurityException when trying to write to /system.");
pie-security-release/core/tests/coretests/src/android/app/DownloadManagerFunctionalTest.java:237:            } catch (SecurityException s) {
pie-security-release/core/tests/coretests/src/android/app/activity/ServiceTest.java:227:        } catch (SecurityException e) {
pie-security-release/core/tests/coretests/src/android/app/activity/ServiceTest.java:368:        } catch (SecurityException e) {
pie-security-release/core/tests/coretests/src/android/app/activity/SetTimeZonePermissionsTest.java:58:            } catch (SecurityException se) {
pie-security-release/core/tests/coretests/src/android/os/storage/StorageManagerBaseTest.java:261:        } catch (SecurityException e) {
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:198:        public void voidSecurityException() {
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:199:            throw new SecurityException("gotcha!");
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:202:        public int intSecurityException() {
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:203:            throw new SecurityException("gotcha!");
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:401:    public void testVoidSecurityException() throws Exception {
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:404:            mRemote.voidSecurityException();
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:405:        } catch (SecurityException e) {
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:412:    public void testIntSecurityException() throws Exception {
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:415:            mRemote.intSecurityException();
pie-security-release/core/tests/coretests/src/android/os/AidlTest.java:416:        } catch (SecurityException e) {
pie-security-release/core/tests/coretests/src/android/os/IAidlTest.aidl:45:    void voidSecurityException();
pie-security-release/core/tests/coretests/src/android/os/IAidlTest.aidl:46:    int intSecurityException();
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:252:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:279:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:315:                getActivity().getPackageName(), BAD_APP_ID, mUserId), SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:336:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:362:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:385:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:422:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:440:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:454:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:457:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:474:                                mUserId), SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:477:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:493:                mUserId), SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:513:                listener, mUserId), SecurityException.class);
pie-security-release/core/tests/coretests/src/android/print/IPrintManagerParametersTest.java:530:                SecurityException.class);
pie-security-release/core/tests/coretests/src/android/content/pm/CrossProfileAppsTest.java:112:    @Test(expected = SecurityException.class)
pie-security-release/core/tests/coretests/src/android/content/pm/CrossProfileAppsTest.java:113:    public void getProfileSwitchingLabel_securityException() {
pie-security-release/core/tests/coretests/src/android/content/pm/CrossProfileAppsTest.java:133:    @Test(expected = SecurityException.class)
pie-security-release/core/tests/coretests/src/android/content/pm/CrossProfileAppsTest.java:134:    public void getProfileSwitchingIcon_securityException() {
pie-security-release/core/tests/coretests/src/android/content/pm/PackageManagerTests.java:2610:        } catch (SecurityException e) {
pie-security-release/core/tests/coretests/src/android/net/NetworkRecommendationProviderTest.java:78:        Mockito.doThrow(new SecurityException())
pie-security-release/core/tests/coretests/src/android/net/NetworkRecommendationProviderTest.java:84:            fail("SecurityException expected.");
pie-security-release/core/tests/coretests/src/android/net/NetworkRecommendationProviderTest.java:85:        } catch (SecurityException e) {
pie-security-release/core/tests/hosttests/test-apps/MultiDexLegacyTestServices/src/com/android/framework/multidexlegacytestservices/ReflectIntermediateClass.java:29:            SecurityException, NoSuchMethodException, IllegalArgumentException,
pie-security-release/services/core/java/com/android/server/TelephonyRegistry.java:124:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/TelephonyRegistry.java:480:            // Checks permission and throws SecurityException for disallowed operations. For pre-M
pie-security-release/services/core/java/com/android/server/IpSecService.java:459:                throw new SecurityException("Attempted access of unowned resources");
pie-security-release/services/core/java/com/android/server/IpSecService.java:1496:                throw new SecurityException("Request to ignore AppOps for non-legacy API");
pie-security-release/services/core/java/com/android/server/IpSecService.java:1622:            throw new SecurityException("Only the owner of an IpSec Transform may apply it!");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:1110:            if (!(e instanceof SecurityException)) {
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:1575:                    throw new SecurityException("Package " + packageName + " not in UID "
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:1643:            throw new SecurityException("Only system can call refreshScreenCaptureDisabled.");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2334:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2358:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2395:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2515:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2546:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2596:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2698:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2714:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2953:            throw new SecurityException("Requires FREEZE_SCREEN permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2975:            throw new SecurityException("Requires FREEZE_SCREEN permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:2996:            throw new SecurityException("Requires DISABLE_KEYGUARD permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3023:            throw new SecurityException("Requires DISABLE_KEYGUARD permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3041:            throw new SecurityException("Requires DISABLE_KEYGUARD permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3089:            throw new SecurityException("Requires CONTROL_KEYGUARD permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3106:            throw new SecurityException("Requires INTERACT_ACROSS_USERS_FULL permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3135:            throw new SecurityException("Requires SET_ANIMATION_SCALE permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3153:            throw new SecurityException("Requires SET_ANIMATION_SCALE permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3704:            throw new SecurityException("Requires READ_FRAME_BUFFER permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3724:            throw new SecurityException("Requires READ_FRAME_BUFFER permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3781:            throw new SecurityException("Requires SET_ORIENTATION permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:3811:            throw new SecurityException("Requires SET_ORIENTATION permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:4460:            throw new SecurityException("Requires MANAGE_APP_TOKENS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:5169:            throw new SecurityException("Must hold permission " +
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:5204:            throw new SecurityException("Must hold permission " +
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:5286:            throw new SecurityException("Must hold permission " +
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:5335:            throw new SecurityException("Must hold permission " +
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:5366:            throw new SecurityException("Must hold permission " +
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:5464:            throw new SecurityException("Must hold permission " +
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:6000:            throw new SecurityException("Caller does not hold permission "
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:6023:            throw new SecurityException("Caller does not hold permission "
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:6037:            throw new SecurityException("Caller does not hold permission "
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:6118:            throw new SecurityException("getCurrentImeTouchRegion is restricted to VR services");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:6152:            throw new SecurityException("Requires FRAME_STATS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:6171:            throw new SecurityException("Requires FRAME_STATS permission");
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:7124:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/wm/WindowManagerService.java:7134:            throw new SecurityException("Requires USER_ACTIVITY permission");
pie-security-release/services/core/java/com/android/server/wm/Session.java:167:            if (!(e instanceof SecurityException)) {
pie-security-release/services/core/java/com/android/server/wm/ViewServer.java:132:                } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/notification/NotificationRecord.java:1062:     * {@link SecurityException} depending on target SDK of enqueuing app.
pie-security-release/services/core/java/com/android/server/notification/NotificationRecord.java:1073:            // This will throw SecurityException if caller can't grant
pie-security-release/services/core/java/com/android/server/notification/NotificationRecord.java:1085:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:1734:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:1772:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:2157:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:2303:                throw new SecurityException("Not allowed to delete channel " + channelId
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:2658:                                throw new SecurityException("Disallowed call from listener: "
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:2723:                                throw new SecurityException("Disallowed call from listener: "
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:3114:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:3137:                throw new SecurityException("Notification policy access denied");
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:3149:                throw new SecurityException("Notification policy access denied");
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:3572:                throw new SecurityException(info + " does not have access");
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:3575:                throw new SecurityException(info + " does not have access");
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:4214:                    throw new SecurityException("Instant app " + pkg
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6179:        throw new SecurityException("Disallowed call for uid " + Binder.getCallingUid());
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6201:                throw new SecurityException("Unknown package " + pkg);
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6205:            throw new SecurityException("Unknown package " + pkg, re);
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6216:                throw new SecurityException("Unknown package " + pkg);
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6219:                throw new SecurityException("Calling uid " + uid + " gave package "
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6223:            throw new SecurityException("Unknown package " + pkg + "\n" + re);
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6322:        } catch (SecurityException se) {
pie-security-release/services/core/java/com/android/server/notification/NotificationManagerService.java:6353:            throw new SecurityException("Could not talk to package manager service");
pie-security-release/services/core/java/com/android/server/notification/ManagedServices.java:596:        throw new SecurityException("Disallowed call from unknown " + getCaption() + ": "
pie-security-release/services/core/java/com/android/server/notification/ManagedServices.java:1032:        } catch (SecurityException ex) {
pie-security-release/services/core/java/com/android/server/notification/ZenModeHelper.java:339:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/notification/ZenModeHelper.java:360:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/notification/ZenModeHelper.java:751:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/SystemUpdateManagerService.java:119:            throw new SecurityException("Can't read system update info. Requiring "
pie-security-release/services/core/java/com/android/server/am/ActivityStackSupervisor.java:1762:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/LockTaskController.java:371:     * @throws SecurityException if the caller is not authorized to stop the lock task mode, i.e. if
pie-security-release/services/core/java/com/android/server/am/LockTaskController.java:402:                throw new SecurityException("Invalid uid, expected " + task.mLockTaskUid
pie-security-release/services/core/java/com/android/server/am/ProcessStatsService.java:116:            if (!(e instanceof SecurityException)) {
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:439:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:764:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:848:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1230:                        throw new SecurityException("Instant app " + r.appInfo.packageName
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1270:                        throw new SecurityException("Foreground not allowed as per app op");
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1485:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1527:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1533:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1963:                            throw new SecurityException("BIND_EXTERNAL_SERVICE failed, " + name +
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1967:                            throw new SecurityException("BIND_EXTERNAL_SERVICE failed, " + name +
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1974:                            throw new SecurityException("BIND_EXTERNAL_SERVICE failed, " +
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1984:                        throw new SecurityException("BIND_EXTERNAL_SERVICE required for " +
pie-security-release/services/core/java/com/android/server/am/ActiveServices.java:1988:                    throw new SecurityException("BIND_EXTERNAL_SERVICE failed, " + name +
pie-security-release/services/core/java/com/android/server/am/BroadcastQueue.java:1177:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/am/AppTaskImpl.java:51:            throw new SecurityException("Caller " + mCallingUid
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:3292:            if (!(e instanceof SecurityException
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:4734:            throw new SecurityException("Isolated process not allowed to call " + caller);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:4831:            throw new SecurityException("Only shell can call it");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5159:                throw new SecurityException("Must be called from an activity");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5163:                throw new SecurityException("Called with bad activity token: " + resultTo);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5166:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5170:                throw new SecurityException("Called without a process attached to activity");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5176:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5184:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5188:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5216:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5218:            // A SecurityException here is generally actually a fault of the original
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5397:                throw new SecurityException("Only focused activity can call startVoiceInteraction");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5749:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:5783:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:6570:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:6587:                    throw new SecurityException("PID " + pid + " does not have permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:6698:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:6738:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:6795:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:6837:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:6931:            throw new SecurityException(callerUid + " cannot kill pkg: " +
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:7067:            throw new SecurityException(callerUid + " cannot kill app process: " +
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:7977:            throw new SecurityException("Invalid application interface");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:8025:            throw new SecurityException();
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:8396:                        throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:8404:                throw new SecurityException(e);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:8538:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:8541:                throw new SecurityException(e);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:9218:        throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:9232:        throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:9746:                throw new SecurityException("Provider " + pi.packageName
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:9762:                    throw new SecurityException("Provider " + pi.packageName
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:9776:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:9781:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10008:                throw new SecurityException("Unable to find app for caller "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10142:                throw new SecurityException("Unable to find app for caller "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10275:                    throw new SecurityException("nice try");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10477:                throw new SecurityException("No persistable permission grants found for UID "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10527:                throw new SecurityException("No permission grants found for UID " + uid
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10595:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10599:            throw new SecurityException("Failed to verify package name ownership");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:10842:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:11690:            throw new SecurityException("updateDeviceOwner called from non-system process");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:12200:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:12238:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:12354:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:12632:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:12732:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13184:            throw new SecurityException("Only the OS may call backgroundWhitelistUid()");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13424:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13488:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13514:                throw new SecurityException("Only privileged app can call notifyLockedProfile");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13517:            throw new SecurityException("Fail to check is caller a privileged app", ex);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13684:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13715:                    throw new SecurityException("Process not debuggable: " + app.packageName);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13728:                    throw new SecurityException("Process not debuggable: " + app.packageName);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13750:                throw new SecurityException("Process not debuggable: " + app.packageName);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13793:                    throw new SecurityException("Unknown process: " + callingPid);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13796:                    throw new SecurityException("Only an instrumentation process "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13934:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:13962:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14437:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14465:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14489:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14642:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14828:            throw new SecurityException("killPids only available to the system");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14894:            throw new SecurityException("killProcessesBelowForeground() only available to system");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14902:            throw new SecurityException("killProcessesBelowAdj() only available to system");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14927:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:14966:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:15002:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:15067:            throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:20513:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:20870:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:20878:                    throw new SecurityException("Given caller package " + callerPackage
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:21322:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:21367:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:21379:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:21390:                        throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:21428:                        throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:21651:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:21659:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:22044:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:22163:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:22470:        throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:24534:                            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:25498:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:25876:            throw new SecurityException("Only SIGNAL_USR1 is allowed");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:25882:                throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:25932:                    throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26042:                    throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26058:                        throw new SecurityException("Process not debuggable: " + proc);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26088:                    throw new SecurityException("No process found for calling pid "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26093:                    throw new SecurityException("Not running a debuggable build");
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26098:                    throw new SecurityException("Package " + reportPackage + " is not running in "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26206:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26220:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26279:                throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:26306:                    throw new SecurityException("Requires permission "
pie-security-release/services/core/java/com/android/server/am/ActivityManagerService.java:27137:                        throw new SecurityException("Process not debuggable: " + proc);
pie-security-release/services/core/java/com/android/server/am/SafeActivityOptions.java:100:    ActivityOptions getOptions(ActivityRecord r) throws SecurityException {
pie-security-release/services/core/java/com/android/server/am/SafeActivityOptions.java:108:    ActivityOptions getOptions(ActivityStackSupervisor supervisor) throws SecurityException {
pie-security-release/services/core/java/com/android/server/am/SafeActivityOptions.java:121:            ActivityStackSupervisor supervisor) throws SecurityException {
pie-security-release/services/core/java/com/android/server/am/SafeActivityOptions.java:203:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/SafeActivityOptions.java:217:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/SafeActivityOptions.java:228:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/SafeActivityOptions.java:240:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/UserController.java:581:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/UserController.java:920:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/UserController.java:1117:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/UserController.java:1518:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/UserController.java:1528:                throw new SecurityException("Shell does not have permission to access user "
pie-security-release/services/core/java/com/android/server/am/UserController.java:1556:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/UserController.java:1706:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/am/UserController.java:1782:                throw new SecurityException("Shell does not have permission to access user "
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:1435:     * Throw SecurityException if specified resolution level is insufficient to use geofences.
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:1441:            throw new SecurityException("Geofence usage requires ACCESS_FINE_LOCATION permission");
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:1480:     * Throw SecurityException if specified resolution level is insufficient to use the named
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:1492:                    throw new SecurityException("\"" + providerName + "\" location provider " +
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:1495:                    throw new SecurityException("\"" + providerName + "\" location provider " +
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:1498:                    throw new SecurityException("Insufficient permission for \"" + providerName +
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:1505:     * Throw SecurityException if WorkSource use is not allowed (i.e. can't blame other packages
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2027:            throw new SecurityException("invalid package name: " + packageName);
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2032:            throw new SecurityException("invalid UID " + uid);
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2037:        throw new SecurityException("invalid package name: " + packageName);
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2502:            throw new SecurityException("Requires ACCESS_LOCATION_EXTRA_COMMANDS permission");
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2516:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2529:     * @throws SecurityException if the provider is not allowed to be
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2552:     * @throws SecurityException if the provider is not allowed to be
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2770:                throw new SecurityException("Requires INTERACT_ACROSS_USERS permission");
pie-security-release/services/core/java/com/android/server/LocationManagerService.java:2811:        throw new SecurityException("need INSTALL_LOCATION_PROVIDER permission, " +
pie-security-release/services/core/java/com/android/server/NetworkScoreService.java:449:            throw new SecurityException("Caller with UID " + getCallingUid() +
pie-security-release/services/core/java/com/android/server/NetworkScoreService.java:736:    private void enforceSystemOnly() throws SecurityException {
pie-security-release/services/core/java/com/android/server/NetworkScoreService.java:742:    private void enforceSystemOrHasScoreNetworks() throws SecurityException {
pie-security-release/services/core/java/com/android/server/NetworkScoreService.java:747:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/NetworkScoreService.java:752:    private void enforceSystemOrIsActiveScorer(int callingUid) throws SecurityException {
pie-security-release/services/core/java/com/android/server/NetworkScoreService.java:756:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/storage/AppFuseBridge.java:100:            throw new SecurityException("PID does not match");
pie-security-release/services/core/java/com/android/server/DeviceIdleController.java:1850:                    throw new SecurityException("Calling app " + UserHandle.formatUid(callingUid)
pie-security-release/services/core/java/com/android/server/NetworkManagementService.java:2302:            throw new SecurityException("Only available to AID_SYSTEM");
pie-security-release/services/core/java/com/android/server/locksettings/recoverablekeystore/KeySyncTask.java:40:import java.security.GeneralSecurityException;
pie-security-release/services/core/java/com/android/server/locksettings/recoverablekeystore/KeySyncTask.java:264:        } catch (GeneralSecurityException e) {
pie-security-release/services/core/java/com/android/server/locksettings/recoverablekeystore/PlatformKeyManager.java:84:     * @throws SecurityException if the caller does not have permission to write to /data/system.
pie-security-release/services/core/java/com/android/server/locksettings/LockSettingsService.java:920:                throw new SecurityException("uid=" + callingUid
pie-security-release/services/core/java/com/android/server/locksettings/LockSettingsService.java:930:                throw new SecurityException("uid=" + callingUid
pie-security-release/services/core/java/com/android/server/locksettings/LockSettingsService.java:1998:            throw new SecurityException("Caller must be shell");
pie-security-release/services/core/java/com/android/server/locksettings/LockSettingsService.java:2593:                    throw new SecurityException("Escrow token is disabled on the current user");
pie-security-release/services/core/java/com/android/server/locksettings/LockSettingsService.java:2644:                throw new SecurityException("Escrow token is disabled on the current user");
pie-security-release/services/core/java/com/android/server/locksettings/LockSettingsService.java:2694:                throw new SecurityException("Escrow token is disabled on the current user");
pie-security-release/services/core/java/com/android/server/power/ShutdownThread.java:376:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/power/ShutdownThread.java:389:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/power/PowerManagerService.java:4244:                // request instead of throwing a SecurityException so we don't break old apps.
pie-security-release/services/core/java/com/android/server/MasterClearReceiver.java:79:                } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/ConsumerIrService.java:74:            throw new SecurityException("Requires TRANSMIT_IR permission");
pie-security-release/services/core/java/com/android/server/ConsumerIrService.java:106:            throw new SecurityException("Requires TRANSMIT_IR permission");
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:72:        } catch (IOException | SecurityException | DigestException | NoSuchAlgorithmException |
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:95:            throws IOException, SignatureNotFoundException, SecurityException {
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:107:            throws IOException, SecurityException, DigestException, NoSuchAlgorithmException,
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:115:            throw new SecurityException("Locally generated verity root hash does not match");
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:124:            throw new SecurityException("Failed to set up shared memory correctly");
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:184:        public ByteBuffer create(int capacity) throws SecurityException {
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:194:                    throw new SecurityException("Failed to set protection");
pie-security-release/services/core/java/com/android/server/security/VerityUtils.java:199:                throw new SecurityException("Failed to set protection", e);
pie-security-release/services/core/java/com/android/server/security/KeyAttestationApplicationIdProviderService.java:50:            throw new SecurityException("This service can only be used by Keystore");
pie-security-release/services/core/java/com/android/server/AppOpsService.java:1519:            throw new SecurityException("Could not talk to package manager service");
pie-security-release/services/core/java/com/android/server/AppOpsService.java:3517:                throw new SecurityException("Need INTERACT_ACROSS_USERS_FULL or"
pie-security-release/services/core/java/com/android/server/AppOpsService.java:3615:            throw new SecurityException(function + " must by called by the system");
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:531:            throw new SecurityException("Illegal access to the session with token " + sessionToken
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:934:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:954:                throw new SecurityException("The caller: " + getCallingPackageName()
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:1143:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:1230:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:1757:                throw new SecurityException("Requires DVB_DEVICE permission");
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:1812:                throw new SecurityException("Requires DVB_DEVICE permission");
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:1965:                throw new SecurityException("Requires CAPTURE_TV_INPUT permission");
pie-security-release/services/core/java/com/android/server/tv/TvInputManagerService.java:2353:                throw new SecurityException("The caller does not have hardware permission");
pie-security-release/services/core/java/com/android/server/tv/TvRemoteProviderProxy.java:155:            } catch (SecurityException ex) {
pie-security-release/services/core/java/com/android/server/wallpaper/WallpaperManagerService.java:1863:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/wallpaper/WallpaperManagerService.java:2296:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/wallpaper/WallpaperManagerService.java:2337:                        throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/wallpaper/WallpaperManagerService.java:2458:            throw new SecurityException("Access denied to process: " + Binder.getCallingPid()
pie-security-release/services/core/java/com/android/server/wallpaper/WallpaperManagerService.java:2492:            throw new SecurityException("Only the system may call isWallpaperBackupEligible");
pie-security-release/services/core/java/com/android/server/trust/TrustAgentWrapper.java:308:                throw  new SecurityException("Escrow token API is not allowed.");
pie-security-release/services/core/java/com/android/server/trust/TrustAgentWrapper.java:322:                throw new SecurityException("Escrow token API is not allowed.");
pie-security-release/services/core/java/com/android/server/trust/TrustAgentWrapper.java:336:                throw new SecurityException("Escrow token API is not allowed.");
pie-security-release/services/core/java/com/android/server/trust/TrustAgentWrapper.java:350:                throw new SecurityException("Escrow token API is not allowed.");
pie-security-release/services/core/java/com/android/server/StorageManagerService.java:145:import java.security.GeneralSecurityException;
pie-security-release/services/core/java/com/android/server/StorageManagerService.java:1379:            throw new SecurityException("Only admin users can adopt sd cards");
pie-security-release/services/core/java/com/android/server/StorageManagerService.java:1654:            throw new SecurityException("Mounting " + volId + " restricted by policy");
pie-security-release/services/core/java/com/android/server/StorageManagerService.java:2328:            throw new SecurityException("no permission to access the crypt keeper");
pie-security-release/services/core/java/com/android/server/StorageManagerService.java:2718:        throw new SecurityException("Invalid mkdirs path: " + appFile);
pie-security-release/services/core/java/com/android/server/StorageManagerService.java:3307:                } catch (GeneralSecurityException e) {
pie-security-release/services/core/java/com/android/server/VibratorService.java:491:                throw new SecurityException("Requires VIBRATE permission");
pie-security-release/services/core/java/com/android/server/VibratorService.java:642:                    // want to throw a SecurityException here.
pie-security-release/services/core/java/com/android/server/MmsServiceBroker.java:244:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/vr/VrManagerService.java:697:     * Throws SecurityException if none of the specified permissions are held.
pie-security-release/services/core/java/com/android/server/vr/VrManagerService.java:708:        throw new SecurityException("Caller does not hold at least one of the permissions: "
pie-security-release/services/core/java/com/android/server/policy/PhoneWindowManager.java:2686:        // check if user has enabled this operation. SecurityException will be thrown if this app
pie-security-release/services/core/java/com/android/server/utils/ManagedApplicationService.java:402:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:116:import java.security.GeneralSecurityException;
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:474:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:503:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:558:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:607:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:772:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:1080:            if (!(e instanceof SecurityException)) {
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:1465:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:1546:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:1575:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:1627:            throw new SecurityException("Calling copyAccountToUser requires "
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:1697:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:1978:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2133:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2152:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2217:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2504:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2537:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2563:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2629:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2657:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2741:            throw new SecurityException("can only call from system");
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:2849:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:3223:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:3469:                } catch (GeneralSecurityException e) {
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:3509:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:3560:        } catch (GeneralSecurityException e) {
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:3666:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:3904:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:3931:            throw new SecurityException("Can be called only by system UID");
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:4006:            throw new SecurityException("Can be called only by system UID");
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:4073:            throw new SecurityException("Only system can check for accounts across users");
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:4301:            throw new SecurityException("User " + UserHandle.getCallingUserId()
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:4454:            throw new SecurityException("getAccountsForPackage() called from unauthorized uid "
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:5599:            throw new SecurityException("You need MANAGE_USERS permission to: " + message);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:5608:            throw new SecurityException("You need MANAGE_USERS or CREATE_USERS permission to: "
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:5684:            throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/accounts/AccountManagerService.java:5732:            throw new SecurityException();
pie-security-release/services/core/java/com/android/server/accounts/CryptoHelper.java:11:import java.security.GeneralSecurityException;
pie-security-release/services/core/java/com/android/server/accounts/CryptoHelper.java:56:    /* default */ Bundle encryptBundle(@NonNull Bundle bundle) throws GeneralSecurityException {
pie-security-release/services/core/java/com/android/server/accounts/CryptoHelper.java:78:    /* default */ Bundle decryptBundle(@NonNull Bundle bundle) throws GeneralSecurityException {
pie-security-release/services/core/java/com/android/server/accounts/CryptoHelper.java:103:            throws GeneralSecurityException {
pie-security-release/services/core/java/com/android/server/accounts/CryptoHelper.java:115:    private byte[] createMac(@NonNull byte[] cipher, @NonNull byte[] iv) throws GeneralSecurityException {
pie-security-release/services/core/java/com/android/server/broadcastradio/BroadcastRadioService.java:77:                throw new SecurityException("ACCESS_BROADCAST_RADIO permission not granted");
pie-security-release/services/core/java/com/android/server/dreams/DreamManagerService.java:416:            throw new SecurityException("Access denied to process: " + Binder.getCallingPid()
pie-security-release/services/core/java/com/android/server/dreams/DreamController.java:162:            } catch (SecurityException ex) {
pie-security-release/services/core/java/com/android/server/oemlock/VendorLock.java:66:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/oemlock/OemLockService.java:155:                    throw new SecurityException("Admin does not allow OEM unlock");
pie-security-release/services/core/java/com/android/server/oemlock/OemLockService.java:159:                    throw new SecurityException("Carrier does not allow OEM unlock");
pie-security-release/services/core/java/com/android/server/oemlock/OemLockService.java:251:            throw new SecurityException("Can't access OEM unlock state. Requires "
pie-security-release/services/core/java/com/android/server/oemlock/OemLockService.java:261:                throw new SecurityException("Must be an admin user");
pie-security-release/services/core/java/com/android/server/timezone/PermissionHelper.java:26:    void enforceCallerHasPermission(String requiredPermission) throws SecurityException;
pie-security-release/services/core/java/com/android/server/HardwarePropertiesManagerService.java:74:            throws SecurityException {
pie-security-release/services/core/java/com/android/server/HardwarePropertiesManagerService.java:84:    public CpuUsageInfo[] getCpuUsages(String callingPackage) throws SecurityException {
pie-security-release/services/core/java/com/android/server/HardwarePropertiesManagerService.java:94:    public float[] getFanSpeeds(String callingPackage) throws SecurityException {
pie-security-release/services/core/java/com/android/server/HardwarePropertiesManagerService.java:153:     * Throws SecurityException if the calling package is not allowed to retrieve information
pie-security-release/services/core/java/com/android/server/HardwarePropertiesManagerService.java:158:     * @throws SecurityException if something other than the device owner, the current VR service,
pie-security-release/services/core/java/com/android/server/HardwarePropertiesManagerService.java:163:            throws SecurityException {
pie-security-release/services/core/java/com/android/server/HardwarePropertiesManagerService.java:172:            throw new SecurityException("The caller is not a device owner, bound VrListenerService"
pie-security-release/services/core/java/com/android/server/InputMethodManagerService.java:1501:            if (!(e instanceof SecurityException)) {
pie-security-release/services/core/java/com/android/server/InputMethodManagerService.java:3270:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/InputMethodManagerService.java:4587:            // content URI and/or contentUriOwnerUserId just results in a SecurityException thrown
pie-security-release/services/core/java/com/android/server/InputMethodManagerService.java:4955:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/InputMethodManagerService.java:5013:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/ConnectivityService.java:1707:        } catch (SecurityException e) { /* fallback to ConnectivityInternalPermission */ }
pie-security-release/services/core/java/com/android/server/ConnectivityService.java:4293:            throw new SecurityException("Insufficient permissions to request a specific SSID");
pie-security-release/services/core/java/com/android/server/ConnectivityService.java:4488:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/fingerprint/FingerprintService.java:1343:            // unexpected SecurityException this method does not check whether its caller is
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:515:            throw new SecurityException(cookie + " not allowed after sealing");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:523:            throw new SecurityException(cookie + " not allowed after commit");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:533:            throw new SecurityException(cookie + " not allowed after destruction");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:713:                        throw new SecurityException("Reverse mode only supported from shell");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:786:     * {@link SecurityException}.
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:792:            throw new SecurityException("Session does not belong to uid " + callingUid);
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:798:     * {@link SecurityException}.
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:805:            throw new SecurityException("Session does not belong to uid " + callingUid);
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:810:     * If anybody is reading or writing data of the session, throw an {@link SecurityException}.
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:817:                throw new SecurityException("Files still open");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:822:                throw new SecurityException("Files still open");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:936:            throw new SecurityException("Destination package " + packageName + " does not have "
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:943:            throw new SecurityException("Can only transfer sessions that use public options");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:963:                throw new SecurityException("Can only transfer sessions that update the original "
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerSession.java:1518:            throw new SecurityException("Must be sealed to accept permissions");
pie-security-release/services/core/java/com/android/server/pm/LauncherAppsService.java:237:         * @throws SecurityException if the calling user and {@code targetUser} are not in the same
pie-security-release/services/core/java/com/android/server/pm/LauncherAppsService.java:276:                throw new SecurityException("Calling package name mismatch");
pie-security-release/services/core/java/com/android/server/pm/LauncherAppsService.java:423:                throw new SecurityException("Caller can't access shortcut information");
pie-security-release/services/core/java/com/android/server/pm/LauncherAppsService.java:532:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/pm/LauncherAppsService.java:534:                    Slog.d(TAG, "SecurityException while launching intent", e);
pie-security-release/services/core/java/com/android/server/pm/LauncherAppsService.java:590:                    throw new SecurityException("Cannot launch non-exported components "
pie-security-release/services/core/java/com/android/server/pm/LauncherAppsService.java:615:                    throw new SecurityException("Attempt to launch activity without "
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerService.java:454:            throw new SecurityException("User restriction prevents installing");
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerService.java:482:            throw new SecurityException("You need the "
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerService.java:593:                throw new SecurityException("Caller has no access to session " + sessionId);
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerService.java:619:                throw new SecurityException("Caller has no access to session " + sessionId);
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerService.java:631:                throw new SecurityException("Caller has no access to session " + sessionId);
pie-security-release/services/core/java/com/android/server/pm/PackageInstallerService.java:650:                throw new SecurityException("Caller has no access to session " + sessionId);
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:873:            throw new SecurityException("MANAGE_USERS permission is required to start intent "
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:892:        throw new SecurityException("Can't modify quiet mode, caller is neither foreground "
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1074:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1090:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1150:            throw new SecurityException("You need INTERACT_ACROSS_USERS or MANAGE_USERS permission "
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1159:            throw new SecurityException("You need MANAGE_USERS permission to query if u=" + userId
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1822:     * @param message used as message if SecurityException is thrown
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1823:     * @throws SecurityException if the caller does not have enough privilege.
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1839:        throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1854:     * @param message used as message if SecurityException is thrown
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1855:     * @throws SecurityException if the caller is not system or root
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1860:            throw new SecurityException("You need MANAGE_USERS permission to: " + message);
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1870:     * @param message used as message if SecurityException is thrown
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1871:     * @throws SecurityException if the caller is not system or root
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1876:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1890:                throw new SecurityException("You either need MANAGE_USERS or CREATE_USERS "
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1894:            throw new SecurityException("You need MANAGE_USERS permission to create an user "
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1927:     * @param message used as message if SecurityException is thrown
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1928:     * @throws SecurityException if the caller is not system or root
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:1933:            throw new SecurityException("Only system may: " + message);
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:3321:            throw new SecurityException("userHandle can only be the calling user or a managed "
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:3955:                boolean throwSecurityException) {
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:3962:                    if (throwSecurityException) {
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:3963:                        throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:3973:                    if (throwSecurityException) {
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:3982:                    if (throwSecurityException) {
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:3983:                        throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:4107:     * {@link SecurityException} if not.
pie-security-release/services/core/java/com/android/server/pm/UserManagerService.java:4112:            throw new SecurityException("Specified package " + callingPackage
pie-security-release/services/core/java/com/android/server/pm/CrossProfileAppsServiceImpl.java:89:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/CrossProfileAppsServiceImpl.java:95:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/CrossProfileAppsServiceImpl.java:183:            throw new SecurityException("Attempt to launch activity without "
pie-security-release/services/core/java/com/android/server/pm/Settings.java:4331:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionSettings.java:246:     * @throws SecurityException If the calling UID is not allowed to add permissions to the
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:679:            throw new SecurityException("Instant apps can't add permissions");
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:682:            throw new SecurityException("Label must be specified in permission");
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:696:                throw new SecurityException("Not allowed to modify non-dynamic permission "
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:713:            throw new SecurityException("Instant applications don't have access to this method");
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:722:                // TODO: switch this back to SecurityException
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:1494:            throw new SecurityException("Cannot grant system fixed permission "
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:1498:            throw new SecurityException("Cannot grant policy fixed permission "
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:1515:            throw new SecurityException("Cannot grant non-ephemeral permission"
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:1615:            throw new SecurityException("Non-System UID cannot revoke system fixed permission "
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:1619:            throw new SecurityException("Cannot revoke policy fixed permission "
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:2015:            throw new SecurityException(message + " requires "
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:2046:                } catch (SecurityException se) {
pie-security-release/services/core/java/com/android/server/pm/permission/PermissionManagerService.java:2068:                throw new SecurityException("Permission tree size cap exceeded");
pie-security-release/services/core/java/com/android/server/pm/permission/BasePermission.java:387:                throw new SecurityException("Calling uid " + callingUid
pie-security-release/services/core/java/com/android/server/pm/permission/BasePermission.java:392:        throw new SecurityException("No permission tree found for " + permName);
pie-security-release/services/core/java/com/android/server/pm/permission/BasePermission.java:398:            throw new SecurityException("Package " + pkg.packageName
pie-security-release/services/core/java/com/android/server/pm/permission/BasePermission.java:402:            throw new SecurityException("Permission " + name
pie-security-release/services/core/java/com/android/server/pm/ShortcutService.java:1515:            throw new SecurityException("Caller must be system or shell");
pie-security-release/services/core/java/com/android/server/pm/ShortcutService.java:1521:            throw new SecurityException("Caller must be shell");
pie-security-release/services/core/java/com/android/server/pm/ShortcutService.java:1527:            throw new SecurityException("Caller must be system");
pie-security-release/services/core/java/com/android/server/pm/ShortcutService.java:1568:            throw new SecurityException("Invalid user-ID");
pie-security-release/services/core/java/com/android/server/pm/ShortcutService.java:1571:            throw new SecurityException("Calling package name mismatch");
pie-security-release/services/core/java/com/android/server/pm/ShortcutService.java:1583:            throw new SecurityException("Shortcut package name mismatch");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:3891:            if (!(e instanceof SecurityException) && !(e instanceof IllegalArgumentException)) {
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:4030:            throw new SecurityException("Instant applications don't have access to this method");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:4036:                throw new SecurityException("Package " + packageName + " was not found!");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:4040:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:4045:                throw new SecurityException("Package " + packageName + " not a system app!");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:4049:                throw new SecurityException("Package " + packageName + " is currently frozen!");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:4053:                throw new SecurityException("Package " + packageName + " is not encryption aware!");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:4569:            throw new SecurityException("Only system or settings may call deletePreloadsFileCache");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:5588:            throw new SecurityException("Instant applications don't have access to this method");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:5800:            throw new SecurityException("getAllPackages is limited to privileged callers");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:6062:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:8974:     * @param message used as message if SecurityException is thrown
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:8975:     * @throws SecurityException if the caller is not system or root
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:8980:            throw new SecurityException(message);
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:9577:            throw new SecurityException("dumpProfiles");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14220:            throw new SecurityException("Calling package " + callingPackage + " in user "
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14281:            throw new SecurityException("Calling package " + packageName
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14719:                    } catch (SecurityException ignore) { }
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14913:                    throw new SecurityException("Bad object " + obj + " for uid " + callingUid);
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14916:                throw new SecurityException("Unknown calling UID: " + callingUid);
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14925:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14942:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14955:                    throw new SecurityException("Neither user " + callingUid
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:14976:            throw new SecurityException("Instant applications don't have access to this method");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:18222:            throw new SecurityException(android.Manifest.permission.MANAGE_USERS
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:19350:            throw new SecurityException("Cannot clear data for a protected package: "
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20076:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20098:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20183:            throw new SecurityException("Only the system may call getPreferredActivityBackup()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20213:            throw new SecurityException("Only the system may call restorePreferredActivities()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20244:            throw new SecurityException("Only the system may call getDefaultAppsBackup()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20274:            throw new SecurityException("Only the system may call restoreDefaultApps()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20300:            throw new SecurityException("Only the system may call getIntentFilterVerificationBackup()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20330:            throw new SecurityException("Only the system may call restorePreferredActivities()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20357:            throw new SecurityException("Only the system may call getPermissionGrantBackup()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20387:            throw new SecurityException("Only the system may call restorePermissionGrants()");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20613:            throw new SecurityException("Calling uid " + callingUid
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20863:                    // throw SecurityException to prevent leaking package information
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20864:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20880:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20890:                throw new SecurityException("Cannot disable a protected package: " + packageName);
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:20911:                    throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:23560:                throw new SecurityException("May not access signing KeySet of other apps.");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:24536:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:24627:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:24644:                throw new SecurityException("Need to declare " + appOpPermission
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:24769:            throw new SecurityException("Caller must have the "
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:24790:            throw new SecurityException("Caller must have the "
pie-security-release/services/core/java/com/android/server/pm/PackageManagerService.java:24809:            throw new SecurityException("Caller must have the "
pie-security-release/services/core/java/com/android/server/pm/ShortcutRequestPinProcessor.java:110:                throw new SecurityException("Calling uid mismatch");
pie-security-release/services/core/java/com/android/server/pm/PackageManagerServiceUtils.java:372:                throw new SecurityException("Shell does not have permission to access user "
pie-security-release/services/core/java/com/android/server/display/DisplayManagerService.java:577:                throw new SecurityException("The calling process has already "
pie-security-release/services/core/java/com/android/server/display/DisplayManagerService.java:1787:                throw new SecurityException("packageName must match the calling uid");
pie-security-release/services/core/java/com/android/server/display/DisplayManagerService.java:1819:                        throw new SecurityException("Invalid media projection");
pie-security-release/services/core/java/com/android/server/display/DisplayManagerService.java:1823:                    throw new SecurityException("unable to validate media projection or flags");
pie-security-release/services/core/java/com/android/server/display/DisplayManagerService.java:1830:                    throw new SecurityException("Requires CAPTURE_VIDEO_OUTPUT or "
pie-security-release/services/core/java/com/android/server/display/DisplayManagerService.java:1838:                    throw new SecurityException("Requires CAPTURE_SECURE_VIDEO_OUTPUT "
pie-security-release/services/core/java/com/android/server/webkit/WebViewUpdateService.java:210:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/webkit/WebViewUpdateService.java:258:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/webkit/WebViewUpdateService.java:284:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/audio/AudioService.java:1974:            throw new SecurityException("Not allowed to change Do Not Disturb state");
pie-security-release/services/core/java/com/android/server/audio/AudioService.java:2517:            throw new SecurityException("Not allowed to change Do Not Disturb state");
pie-security-release/services/core/java/com/android/server/audio/AudioService.java:4218:            throw new SecurityException("Not allowed to change Do Not Disturb state");
pie-security-release/services/core/java/com/android/server/audio/AudioService.java:8043:            throw new SecurityException("Not allowed to monitor audioserver state");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:621:                throw new SecurityException(
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:665:            throw new SecurityException("Requires DISABLE_INPUT_DEVICE permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:675:            throw new SecurityException("Requires DISABLE_INPUT_DEVICE permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:715:                throw new SecurityException("The calling process has already "
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:919:            throw new SecurityException("Requires SET_INPUT_CALIBRATION permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:947:            throw new SecurityException("Requires TABLET_MODE permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:956:            throw new SecurityException("Requires TABLET_MODE_LISTENER permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:1331:            throw new SecurityException("Requires SET_KEYBOARD_LAYOUT permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:1370:            throw new SecurityException("Requires SET_KEYBOARD_LAYOUT permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:1399:            throw new SecurityException("Requires SET_KEYBOARD_LAYOUT permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:1545:            throw new SecurityException("Requires SET_POINTER_SPEED permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:1744:            throw new SecurityException("Requires INJECT_EVENTS permission");
pie-security-release/services/core/java/com/android/server/input/InputManagerService.java:1755:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/om/OverlayManagerService.java:663:         * @param message message for any SecurityException
pie-security-release/services/core/java/com/android/server/om/OverlayManagerService.java:674:         * @param message used as message if SecurityException is thrown
pie-security-release/services/core/java/com/android/server/om/OverlayManagerService.java:675:         * @throws SecurityException if the permission check fails
pie-security-release/services/core/java/com/android/server/om/OverlayManagerService.java:685:         * @param message used as message if SecurityException is thrown
pie-security-release/services/core/java/com/android/server/om/OverlayManagerService.java:686:         * @throws SecurityException if the permission check fails
pie-security-release/services/core/java/com/android/server/DropBoxManagerService.java:333:            throw new SecurityException("READ_LOGS permission required");
pie-security-release/services/core/java/com/android/server/job/JobSchedulerShellCommand.java:89:            throw new SecurityException("Uid " + uid
pie-security-release/services/core/java/com/android/server/job/JobSchedulerService.java:876:            // This may throw a SecurityException.
pie-security-release/services/core/java/com/android/server/job/JobSchedulerService.java:1539:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/job/JobSchedulerService.java:1547:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/job/JobSchedulerService.java:2523:                    throw new SecurityException("Job has invalid flags");
pie-security-release/services/core/java/com/android/server/job/JobSchedulerService.java:2605:                throw new SecurityException("Caller uid " + callerUid
pie-security-release/services/core/java/com/android/server/job/JobServiceContext.java:481:            throw new SecurityException(sb.toString());
pie-security-release/services/core/java/com/android/server/os/DeviceIdentifiersPolicyService.java:64:                throw new SecurityException("getSerial requires READ_PHONE_STATE"
pie-security-release/services/core/java/com/android/server/slice/SliceManagerService.java:287:            throw new SecurityException("Caller must be system");
pie-security-release/services/core/java/com/android/server/slice/SliceManagerService.java:312:            throw new SecurityException("Caller must be system");
pie-security-release/services/core/java/com/android/server/slice/SliceManagerService.java:342:            throw new SecurityException("Caller must own " + uri);
pie-security-release/services/core/java/com/android/server/slice/SliceManagerService.java:440:                throw new SecurityException("Access to slice " + uri + " is required");
pie-security-release/services/core/java/com/android/server/connectivity/IpConnectivityMetrics.java:331:                throw new SecurityException(String.format("Uid %d has no permission to listen for"
pie-security-release/services/core/java/com/android/server/connectivity/Vpn.java:1021:                throw new SecurityException("Restricted users cannot establish VPNs");
pie-security-release/services/core/java/com/android/server/connectivity/Vpn.java:1027:                throw new SecurityException("Cannot find " + config.user);
pie-security-release/services/core/java/com/android/server/connectivity/Vpn.java:1030:                throw new SecurityException(config.user + " does not require " + BIND_VPN_SERVICE);
pie-security-release/services/core/java/com/android/server/connectivity/Vpn.java:1033:            throw new SecurityException("Cannot find " + config.user);
pie-security-release/services/core/java/com/android/server/connectivity/Vpn.java:1695:            throw new SecurityException("Restricted users cannot establish VPNs");
pie-security-release/services/core/java/com/android/server/BluetoothManagerService.java:843:            throw new SecurityException("no permission to enable Bluetooth quietly");
pie-security-release/services/core/java/com/android/server/BluetoothManagerService.java:945:                throw new SecurityException("Package " + packageName
pie-security-release/services/core/java/com/android/server/content/ContentService.java:266:            if (!(e instanceof SecurityException)) {
pie-security-release/services/core/java/com/android/server/content/ContentService.java:340:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/content/ContentService.java:407:                throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/content/ContentService.java:1241:                    throw new SecurityException(TAG + "Neither user " + uid
pie-security-release/services/core/java/com/android/server/content/ContentService.java:1284:                    throw new SecurityException(msg);
pie-security-release/services/core/java/com/android/server/content/ContentService.java:1588:            throw new SecurityException("Non-shell user attempted to call " + method);
pie-security-release/services/core/java/com/android/server/net/watchlist/NetworkWatchlistService.java:247:            throw new SecurityException(String.format("Uid %d has no permission to change watchlist"
pie-security-release/services/core/java/com/android/server/net/NetworkStatsObservers.java:415:            } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/net/NetworkStatsService.java:659:                    throw new SecurityException("Calling package " + mCallingPackage
pie-security-release/services/core/java/com/android/server/net/NetworkStatsCollection.java:246:            throw new SecurityException("Network stats history of uid " + uid
pie-security-release/services/core/java/com/android/server/net/NetworkPolicyManagerService.java:2685:        } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/net/NetworkPolicyManagerService.java:3200:            throw new SecurityException();
pie-security-release/services/core/java/com/android/server/media/MediaRouterService.java:232:            throw new SecurityException("packageName must match the calling uid");
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:346:            throw new SecurityException("Must hold the MODIFY_PHONE_STATE permission.");
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:398:                } catch (SecurityException e) {
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:621:            throw new SecurityException("Missing permission to control media.");
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:632:            throw new SecurityException("Only system ui may " + action);
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:1181:                    throw new SecurityException("Only Bluetooth service processes can set"
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:1229:                    throw new SecurityException("Must hold the SET_VOLUME_KEY_LONG_PRESS_LISTENER" +
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:1289:                    throw new SecurityException("Must hold the SET_MEDIA_KEY_LISTENER" +
pie-security-release/services/core/java/com/android/server/media/MediaSessionService.java:1762:                throw new SecurityException("Missing permission to control media.");
pie-security-release/services/core/java/com/android/server/media/RemoteDisplayProviderProxy.java:199:            } catch (SecurityException ex) {
pie-security-release/services/core/java/com/android/server/media/projection/MediaProjectionManagerService.java:227:                throw new SecurityException("Requires MANAGE_MEDIA_PROJECTION in order to grant "
pie-security-release/services/core/java/com/android/server/media/projection/MediaProjectionManagerService.java:257:                throw new SecurityException("Requires MANAGE_MEDIA_PROJECTION in order to add "
pie-security-release/services/core/java/com/android/server/media/projection/MediaProjectionManagerService.java:272:                throw new SecurityException("Requires MANAGE_MEDIA_PROJECTION in order to add "
pie-security-release/services/core/java/com/android/server/media/projection/MediaProjectionManagerService.java:290:                throw new SecurityException("Requires MANAGE_MEDIA_PROJECTION in order to add "
pie-security-release/services/core/java/com/android/server/media/projection/MediaProjectionManagerService.java:305:                throw new SecurityException("Requires MANAGE_MEDIA_PROJECTION in order to remove "
pie-security-release/services/core/java/com/android/server/clipboard/ClipboardService.java:239:                if (!(e instanceof SecurityException)) {
pie-security-release/services/core/java/com/android/server/clipboard/ClipboardService.java:499:            // This will throw SecurityException if caller can't grant
pie-security-release/services/core/java/com/android/server/clipboard/ClipboardService.java:567:                throw new SecurityException("Calling uid " + uid
pie-security-release/services/core/java/com/android/server/PersistentDataBlockService.java:167:            throw new SecurityException("Can't access OEM unlock state. Requires "
pie-security-release/services/core/java/com/android/server/PersistentDataBlockService.java:180:            throw new SecurityException("uid " + callingUid + " not allowed to access PST");
pie-security-release/services/core/java/com/android/server/PersistentDataBlockService.java:188:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/PersistentDataBlockService.java:195:            throw new SecurityException(
pie-security-release/services/core/java/com/android/server/PersistentDataBlockService.java:506:        public void setOemUnlockEnabled(boolean enabled) throws SecurityException {
pie-security-release/services/usage/java/com/android/server/usage/UsageStatsService.java:715:                throw new SecurityException("Calling uid " + pkg + " cannot query events"
pie-security-release/services/usage/java/com/android/server/usage/UsageStatsService.java:931:                    throw new SecurityException(
pie-security-release/services/usage/java/com/android/server/usage/UsageStatsService.java:1005:                throw new SecurityException(
pie-security-release/services/usage/java/com/android/server/usage/UsageStatsService.java:1118:                throw new SecurityException("Caller doesn't have OBSERVE_APP_USAGE permission");
pie-security-release/services/usage/java/com/android/server/usage/UsageStatsService.java:1141:                throw new SecurityException("Caller doesn't have OBSERVE_APP_USAGE permission");
pie-security-release/services/usage/java/com/android/server/usage/StorageStatsService.java:151:                throw new SecurityException("Package " + callingPackage + " from UID " + callingUid
pie-security-release/services/midi/java/com/android/server/midi/MidiService.java:664:                throw new SecurityException("Attempt to open private device with wrong UID");
pie-security-release/services/midi/java/com/android/server/midi/MidiService.java:715:            throw new SecurityException("only system can create USB devices");
pie-security-release/services/midi/java/com/android/server/midi/MidiService.java:717:            throw new SecurityException("only MidiBluetoothService can create Bluetooth devices");
pie-security-release/services/midi/java/com/android/server/midi/MidiService.java:765:                throw new SecurityException("setDeviceStatus() caller UID " + Binder.getCallingUid()
pie-security-release/services/usb/java/com/android/server/usb/UsbHostManager.java:450:                throw new SecurityException("USB device is on a restricted bus");
pie-security-release/services/usb/java/com/android/server/usb/UsbUserSettingsManager.java:194:            throw new SecurityException("User has not given permission to device " + device);
pie-security-release/services/usb/java/com/android/server/usb/UsbUserSettingsManager.java:200:            throw new SecurityException("User has not given permission to accessory " + accessory);
pie-security-release/services/usb/java/com/android/server/usb/UsbDeviceManager.java:1027:                } catch (SecurityException e) {
pie-security-release/services/usb/java/com/android/server/usb/UsbDebuggingManager.java:378:        } catch (SecurityException e) {
pie-security-release/services/companion/java/com/android/server/companion/CompanionDeviceManagerService.java:283:                throw new SecurityException(pkg + " doesn't belong to uid " + callingUid);
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java:275:            throw new SecurityException("Calling uid " + callingUid
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java:284:            throw new SecurityException("Calling uid " + callingUid
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerServiceImpl.java:293:            throw new SecurityException("Calling uid " + callingUid
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionSessionConnection.java:304:            // This will throw SecurityException for us.
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionSessionConnection.java:313:        } catch (SecurityException e) {
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:251:                if (!(e instanceof SecurityException)) {
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:600:                    throw new SecurityException(
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:617:                    throw new SecurityException(
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:883:                    throw new SecurityException(
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:909:                    throw new SecurityException(
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:930:                    throw new SecurityException(
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:970:                    throw new SecurityException(
pie-security-release/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java:1178:                throw new SecurityException("Caller does not hold the permission " + permission);
pie-security-release/services/voiceinteraction/java/com/android/server/soundtrigger/SoundTriggerService.java:171:                if (!(e instanceof SecurityException)) {
pie-security-release/services/voiceinteraction/java/com/android/server/soundtrigger/SoundTriggerService.java:1245:            throw new SecurityException("Caller does not hold the permission " + permission);
pie-security-release/services/autofill/java/com/android/server/autofill/AutofillManagerServiceImpl.java:532:            throw new SecurityException("Could not verify UID for " + componentName);
pie-security-release/services/autofill/java/com/android/server/autofill/AutofillManagerServiceImpl.java:552:            throw new SecurityException("Invalid component: " + componentName);
pie-security-release/services/appwidget/java/com/android/server/appwidget/AppWidgetServiceImpl.java:1287:                throw new SecurityException("The taget service not in the same package"
pie-security-release/services/appwidget/java/com/android/server/appwidget/AppWidgetServiceImpl.java:2916:            throw new SecurityException("Only the system process can call this");
pie-security-release/services/appwidget/java/com/android/server/appwidget/AppWidgetServiceImpl.java:3672:                    throw new SecurityException("Service " + componentName
pie-security-release/services/appwidget/java/com/android/server/appwidget/AppWidgetServiceImpl.java:3676:                    throw new SecurityException("Service " + componentName
pie-security-release/services/appwidget/java/com/android/server/appwidget/AppWidgetServiceImpl.java:3730:            } catch (SecurityException se) {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2589:            throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2603:                throw new SecurityException("Admin " + admin.info.getComponent()
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2607:                throw new SecurityException("Admin " + admin.info.getComponent()
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2610:            throw new SecurityException("Admin " + admin.info.getComponent()
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2614:            throw new SecurityException("No active admin owned by uid "
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2620:            throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2639:            throw new SecurityException("No active admin " + who);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2642:            throw new SecurityException("Admin " + who + " is not owned by uid " + uid);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2656:                throw new SecurityException("No active admin " + who);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:2659:                throw new SecurityException("Admin " + who + " is not owned by uid " + uid);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:3771:                throw new SecurityException("No active admin " + adminReceiver);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:3828:                    throw new SecurityException("Attempt to remove non-test admin "
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:3895:            throw new SecurityException("Non-shell user attempted to call " + method);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:3934:            throw new SecurityException("Caller must be system");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:4730:                    throw new SecurityException("resetPassword() is deprecated for DPC targeting O"
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:4746:                        throw new SecurityException("Cannot call with null password");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:4755:                        throw new SecurityException("Admin cannot change current password");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5139:                        throw new SecurityException("Only profile owner admins can set "
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5353:            ComponentName who, String callerPackage, int callerUid) throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5356:                throw new SecurityException("Not in Device Owner mode.");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5359:                throw new SecurityException("Caller not from device owner user");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5362:                throw new SecurityException("Caller with uid " + mInjector.binderGetCallingUid() +
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5616:            List<String> scopes) throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5684:            String delegatePackage) throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5703:                    throw new SecurityException("Caller with uid " + callingUid + " is not "
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5724:            throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5803:     * @throws SecurityException if {@code who} is given and is not an owner for {@code reqPolicy};
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5816:            throw new SecurityException("Caller with uid " + mInjector.binderGetCallingUid()
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5863:            throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5868:    public String getCertInstallerPackage(ComponentName who) throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5877:     * @throws SecurityException if the caller is not a profile or device owner.
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5882:            throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5904:            throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5930:        } catch (IOException | SecurityException e) {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5993:                throw new SecurityException("Cannot wipe data. " + restriction
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:5999:                    throw new SecurityException(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:6209:            } catch (SecurityException e) {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:6536:            throw new SecurityException(e);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:6754:    private void ensureDeviceOwnerAndAllUsersAffiliated(ComponentName who) throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:6758:                throw new SecurityException("Not all users are affiliated.");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:7361:                throw new SecurityException("Invalid packageName");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:7364:            throw new SecurityException(e);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:7372:                throw new SecurityException(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:7956:            throw new SecurityException("You can not " + message + " outside a managed profile.");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:7962:            throw new SecurityException("You can not " + message + " for a managed profile.");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:8030:            throw new SecurityException("User " + userId + " is not allowed to use lock task");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:8336:                throw new SecurityException("Only the system can query the permission provider");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:8578:            throw new SecurityException(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:8752:            throw new SecurityException(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:8812:            throw new SecurityException(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:8861:            throw new SecurityException("createAndManageUser was called from non-system user");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9110:                throw new SecurityException("Admin " + who +
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9273:                    throw new SecurityException("Device owner cannot set user restriction " + key);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9277:                    throw new SecurityException("Profile owner cannot set user restriction " + key);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9516:                throw new SecurityException("Admin " + who +
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9807:            throws SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9915:            throw new SecurityException("notifyLockTaskModeChanged can only be called by system");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9951:            // SecurityException to avoid breaking apps.
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9959:                throw new SecurityException(String.format(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:9990:                throw new SecurityException(String.format(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:10037:                    throw new SecurityException(String.format(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:10041:                throw new SecurityException(String.format(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:10132:                throw new SecurityException("Admin " + who +
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:10137:            throw new SecurityException("Managed profile cannot disable keyguard");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:10162:                throw new SecurityException("Admin " + who +
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:10166:                throw new SecurityException("Managed profile cannot disable status bar");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:10840:            } catch (SecurityException se) {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:11250:            throw new SecurityException("Only the system can query support message for user");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:11268:            throw new SecurityException("Only the system can query support message for user");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:11473:            throw new SecurityException(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:11728:            throw new SecurityException("Caller has to be in user 0");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:12084:            throw new SecurityException("Not allowed to bind to target user id");
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:12440:     * @throws SecurityException if the intent is resolved to an invalid service.
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:12444:            @UserIdInt int targetUserId) throws RemoteException, SecurityException {
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:12456:            throw new SecurityException("Only allow to bind service in " + expectedPackageName);
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:12460:            throw new SecurityException(
pie-security-release/services/devicepolicy/java/com/android/server/devicepolicy/DevicePolicyManagerService.java:12615:        } catch (SecurityException se) {
pie-security-release/services/accessibility/java/com/android/server/accessibility/AccessibilityManagerService.java:868:            throw new SecurityException("Caller does not hold permission "
pie-security-release/services/accessibility/java/com/android/server/accessibility/AccessibilityManagerService.java:887:            throw new SecurityException("Caller does not hold permission "
pie-security-release/services/accessibility/java/com/android/server/accessibility/AccessibilityManagerService.java:2296:            throw new SecurityException(
pie-security-release/services/accessibility/java/com/android/server/accessibility/AccessibilityManagerService.java:2386:                throw new SecurityException("Only SYSTEM can call sendFingerprintGesture");
pie-security-release/services/accessibility/java/com/android/server/accessibility/AccessibilityManagerService.java:3522:                throw new SecurityException("Call from user " + callingUserId + " as user "
pie-security-release/services/accessibility/java/com/android/server/accessibility/AccessibilityManagerService.java:3602:                throw new SecurityException("You do not have " + permission
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationRecordTest.java:650:                anyInt(), anyInt())).thenThrow(new SecurityException());
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationRecordTest.java:662:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationRecordTest.java:671:                anyInt(), anyInt())).thenThrow(SecurityException.class);
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationRecordTest.java:688:                anyInt(), anyInt())).thenThrow(SecurityException.class);
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:297:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1565:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1592:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1628:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1650:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1681:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1701:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1861:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1883:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1905:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1925:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1944:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:1963:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:2026:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:2047:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:2068:        } catch (SecurityException e) {
pie-security-release/services/tests/uiservicestests/src/com/android/server/notification/NotificationManagerServiceTest.java:3186:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/am/LockTaskControllerTest.java:290:    @Test(expected = SecurityException.class)
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:683:        testRecentTasksApis(false /* expectNoSecurityException */);
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:686:        testGetTasksApis(false /* expectNoSecurityException */);
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:696:        testRecentTasksApis(true /* expectNoSecurityException */);
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:697:        testGetTasksApis(true /* expectNoSecurityException */);
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:701:        assertSecurityException(expectCallable, () -> mService.removeStack(INVALID_STACK_ID));
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:702:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:704:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:706:        assertSecurityException(expectCallable, () -> mService.removeTask(0));
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:707:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:709:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:711:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:714:        assertSecurityException(expectCallable, () -> mService.dismissSplitScreenMode(true));
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:715:        assertSecurityException(expectCallable, () -> mService.dismissPip(true, 0));
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:716:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:718:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:720:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:723:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:725:        assertSecurityException(expectCallable, () -> mService.getAllStackInfos());
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:726:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:728:        assertSecurityException(expectCallable, () -> {
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:735:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:737:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:739:        assertSecurityException(expectCallable,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:741:        assertSecurityException(expectCallable, () -> {
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:748:        assertSecurityException(expectCallable, () -> {
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:755:        assertSecurityException(expectCallable, () -> mService.getTaskDescription(0));
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:756:        assertSecurityException(expectCallable, () -> mService.cancelTaskWindowTransition(0));
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:757:        assertSecurityException(expectCallable, () -> mService.startRecentsActivity(null, null,
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:759:        assertSecurityException(expectCallable, () -> mService.cancelRecentsAnimation(true));
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:760:        assertSecurityException(expectCallable, () -> mService.stopAppSwitches());
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:761:        assertSecurityException(expectCallable, () -> mService.resumeAppSwitches());
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:823:    private void assertSecurityException(boolean expectCallable, Runnable runnable) {
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:824:        boolean noSecurityException = true;
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:827:        } catch (SecurityException se) {
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:828:            noSecurityException = false;
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:830:            // We only care about SecurityExceptions, fall through here
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:833:        if (noSecurityException != expectCallable) {
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:835:                    + noSecurityException);
pie-security-release/services/tests/servicestests/src/com/android/server/am/RecentTasksTest.java:978:                        throw new SecurityException();
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:231:        doThrow(new SecurityException()).when(mContext)
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:237:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:297:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:298:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:360:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:361:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:409:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:410:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:431:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:432:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:448:        doThrow(new SecurityException()).when(mContext)
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:453:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:454:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:469:        doThrow(new SecurityException()).when(mContext).enforceCallingOrSelfPermission(
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:475:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:476:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:483:        doThrow(new SecurityException()).when(mContext).enforceCallingOrSelfPermission(
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:489:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:490:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:561:            fail("SecurityException expected");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:562:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:576:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:577:            fail("Unexpected SecurityException");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:590:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:591:            fail("Unexpected SecurityException");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:842:        doThrow(new SecurityException()).when(mContext)
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:846:            fail("SecurityException expected.");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:847:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:867:        doThrow(new SecurityException()).when(mContext)
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:872:            fail("SecurityException expected.");
pie-security-release/services/tests/servicestests/src/com/android/server/NetworkScoreServiceTest.java:873:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:79:import java.security.GeneralSecurityException;
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:1361:            fail("SecurityException expected. But no exception was thrown.");
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:1362:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:1363:            // SecurityException is expected.
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:1607:            fail("SecurityException expected. But no exception was thrown.");
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:1608:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:1609:            // SecurityException is expected.
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:2340:            fail("SecurityException expected. But no exception was thrown.");
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:2341:        } catch (SecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:2342:            // SecurityException is expected.
pie-security-release/services/tests/servicestests/src/com/android/server/accounts/AccountManagerServiceTest.java:3096:        } catch (GeneralSecurityException e) {
pie-security-release/services/tests/servicestests/src/com/android/server/timezone/RulesManagerServiceTest.java:93:    @Test(expected = SecurityException.class)
pie-security-release/services/tests/servicestests/src/com/android/server/timezone/RulesManagerServiceTest.java:99:    @Test(expected = SecurityException.class)
pie-security-release/services/tests/servicestests/src/com/android/server/timezone/RulesManagerServiceTest.java:105:    @Test(expected = SecurityException.class)
pie-security-release/services/tests/servicestests/src/com/android/server/timezone/RulesManagerServiceTest.java:111:    @Test(expected = SecurityException.class)
pie-security-release/services/tests/servicestests/src/com/android/server/timezone/RulesManagerServiceTest.java:921:        doThrow(new SecurityException("Simulated permission failure"))
pie-security-release/services/tests/servicestests/src/com/android/server/timezone/RulesManagerServiceTest.java:927:        doThrow(new SecurityException("Simulated permission failure"))
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:343:    public void testSetActiveAdmin_SecurityException() {
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:347:        assertExpectException(SecurityException.class, /* messageRegex= */ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:353:        assertExpectException(SecurityException.class, /* messageRegex= */ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:539:    public void testRemoveActiveAdmin_SecurityException() {
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:551:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:561:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:744:        // Calling from a non-shell uid should fail with a SecurityException
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:746:        assertExpectException(SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1005:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1007:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1009:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1011:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1020:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1022:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1024:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1026:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1160:        assertExpectException(SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1473:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1480:        // DPMS executes without a SecurityException
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1483:        } catch (SecurityException unexpected) {
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1484:            fail("Threw SecurityException on authorized access");
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1496:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1504:        } catch (SecurityException expected) {
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1505:            fail("Threw SecurityException on authorized access");
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1527:        assertExpectException(SecurityException.class, nonDelegateExceptionMessageRegex,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1559:        assertExpectException(SecurityException.class, nonDelegateExceptionMessageRegex,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1576:        assertExpectException(SecurityException.class, nonDelegateExceptionMessageRegex,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1956:        assertExpectException(SecurityException.class, /* messageRegex= */ "No active admin",
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1964:        assertExpectException(SecurityException.class, /* messageRegex= */ NOT_DEVICE_OWNER_MSG,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:1969:        assertExpectException(SecurityException.class, /* messageRegex= */ NOT_DEVICE_OWNER_MSG,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2005:        assertExpectException(SecurityException.class, /* messageRegex= */ NOT_DEVICE_OWNER_MSG,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2010:        assertExpectException(SecurityException.class, /* messageRegex= */ NOT_DEVICE_OWNER_MSG,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2056:            assertExpectException(SecurityException.class, /* messageRegex= */ "message for user",
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2059:            assertExpectException(SecurityException.class, /* messageRegex= */ "message for user",
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2067:            assertExpectException(SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2157:        assertExpectException(SecurityException.class,  /* messageRegex= */ NOT_PROFILE_OWNER_MSG,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2159:        assertExpectException(SecurityException.class,  /* messageRegex= */ NOT_PROFILE_OWNER_MSG,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2194:        assertExpectException(SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2201:        assertExpectException(SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:2403:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3303:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3310:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3318:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3453:        assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3481:        assertExpectException(SecurityException.class, null, () -> dpm.setTime(admin1, 0));
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3501:        assertExpectException(SecurityException.class, null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3749:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3751:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3754:        assertExpectException(SecurityException.class, /* messageRegex =*/ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:3962:        assertExpectException(SecurityException.class, /* messageRegex= */ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4006:        assertExpectException(SecurityException.class, /* messageRegex= */ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4148:        assertExpectException(SecurityException.class, /* messageRegex= */ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4503:        assertExpectException(SecurityException.class, /* messageRegex= */ null,
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4737:        assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4739:        assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4741:        assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4743:        assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4745:        assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DevicePolicyManagerTest.java:4747:        assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/devicepolicy/DpmMockContext.java:237:            throw new SecurityException("Caller doesn't have " + permission + " : " + message);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest7.java:84:        assertExpectException(SecurityException.class, "must be shell",
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest7.java:88:        assertExpectException(SecurityException.class, "must be shell",
pie-security-release/services/tests/servicestests/src/com/android/server/pm/BaseShortcutManagerTest.java:453:                throw new SecurityException("Missing permission: " + permission);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/BaseShortcutManagerTest.java:840:                    throw new SecurityException(inv.getArguments()[2] + " for unrelated profile "
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest8.java:1567:            assertExpectException(SecurityException.class, "Calling uid mismatch", request::accept);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:137:            throw new SecurityException("Not matching");
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:197:    @Test(expected = SecurityException.class)
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:205:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:227:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:247:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:269:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:289:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/CrossProfileAppsServiceImplTest.java:309:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2310:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2312:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2314:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2316:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2318:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2320:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2358:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2360:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2362:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2364:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2366:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2368:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2406:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2408:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2410:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2412:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2414:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2416:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2486:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2488:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2490:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2492:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2494:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2496:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2535:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2537:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2539:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2541:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2543:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2545:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2585:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2587:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2589:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2591:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2593:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2595:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2612:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2614:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2616:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2619:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2621:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2623:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2679:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2681:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2683:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2685:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2687:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2689:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2728:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2730:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2732:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2734:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2736:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2738:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2778:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2780:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2782:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2784:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2786:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:2788:                    SecurityException.class);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:6134:                    SecurityException.class, "", () -> {
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:6213:                    SecurityException.class, "unrelated profile", () -> {
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:6229:                    SecurityException.class, "unrelated profile", () -> {
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:6234:                    SecurityException.class, "unrelated profile", () -> {
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest1.java:6268:        assertExpectException(SecurityException.class, "Missing permission", () ->
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest10.java:137:            assertExpectException(SecurityException.class, "Calling uid mismatch",
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest10.java:146:            assertExpectException(SecurityException.class, "Calling uid mismatch",
pie-security-release/services/tests/servicestests/src/com/android/server/pm/ShortcutManagerTest10.java:179:            assertExpectException(SecurityException.class, null, () ->
pie-security-release/services/tests/servicestests/src/com/android/server/pm/UserManagerTest.java:387:            fail("SecurityException should be thrown for nonexistent user");
pie-security-release/services/tests/servicestests/src/com/android/server/pm/UserManagerTest.java:389:            assertTrue("SecurityException should be thrown for nonexistent user, but was: " + e,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/UserManagerTest.java:390:                    e instanceof SecurityException);
pie-security-release/services/tests/servicestests/src/com/android/server/pm/UserManagerTest.java:399:            fail("SecurityException should be thrown for other user");
pie-security-release/services/tests/servicestests/src/com/android/server/pm/UserManagerTest.java:401:            assertTrue("SecurityException should be thrown for other user, but was: " + e,
pie-security-release/services/tests/servicestests/src/com/android/server/pm/UserManagerTest.java:402:                    e instanceof SecurityException);
pie-security-release/services/tests/servicestests/src/com/android/server/backup/TrampolineTest.java:180:    public void setBackupServiceActive_callerNonRootNonSystem_securityExceptionThrown() {
pie-security-release/services/tests/servicestests/src/com/android/server/backup/TrampolineTest.java:186:        } catch (SecurityException expected) {
pie-security-release/services/tests/servicestests/src/com/android/server/backup/BackupPasswordManagerTest.java:80:    public void hasBackupPassword_throwsSecurityExceptionIfLacksPermission() {
pie-security-release/services/tests/servicestests/src/com/android/server/backup/BackupPasswordManagerTest.java:84:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/backup/BackupPasswordManagerTest.java:135:    public void backupPasswordMatches_throwsSecurityExceptionIfLacksPermission() {
pie-security-release/services/tests/servicestests/src/com/android/server/backup/BackupPasswordManagerTest.java:139:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/backup/BackupPasswordManagerTest.java:170:    public void setBackupPassword_throwsSecurityExceptionIfLacksPermission() {
pie-security-release/services/tests/servicestests/src/com/android/server/backup/BackupPasswordManagerTest.java:174:                SecurityException.class,
pie-security-release/services/tests/servicestests/src/com/android/server/backup/BackupPasswordManagerTest.java:189:        doThrow(new SecurityException()).when(mContext)
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:163:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:203:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:245:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:295:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:394:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:459:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:592:    public void testUpdateTransportAttributes_whenPermissionDenied_throwsSecurityException()
pie-security-release/services/robotests/src/com/android/server/backup/BackupManagerServiceTest.java:599:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/restore/ActiveRestoreSessionTest.java:156:                SecurityException.class,
pie-security-release/services/robotests/src/com/android/server/backup/restore/ActiveRestoreSessionTest.java:508:                SecurityException.class,
pie-security-release/services/restrictions/java/com/android/server/restrictions/RestrictionsManagerService.java:170:                        throw new SecurityException("No restrictions provider registered for user");
pie-security-release/services/restrictions/java/com/android/server/restrictions/RestrictionsManagerService.java:193:                        throw new SecurityException(message + callingUid);
pie-security-release/services/print/java/com/android/server/print/PrintManagerService.java:344:                    throw new SecurityException("Only system and print spooler can call this");
pie-security-release/services/print/java/com/android/server/print/PrintManagerService.java:737:                throw new SecurityException("Can only be called by uid " + SHELL_UID
pie-security-release/services/print/java/com/android/server/print/PrintManagerService.java:757:                throw new SecurityException("Can only be called by uid " + SHELL_UID
pie-security-release/services/print/java/com/android/server/print/PrintManagerService.java:1051:                throw new SecurityException("Call from app " + callingAppId + " as app "
pie-security-release/services/backup/java/com/android/server/backup/BackupManagerService.java:2937:     * {@link SecurityException} will be thrown.
pie-security-release/services/backup/java/com/android/server/backup/BackupManagerService.java:2954:     * @throws SecurityException If the UID of the calling process differs from the package UID of
pie-security-release/services/backup/java/com/android/server/backup/BackupManagerService.java:3000:                throw new SecurityException("Only the transport can change its description");
pie-security-release/services/backup/java/com/android/server/backup/BackupManagerService.java:3003:            throw new SecurityException("Transport package not found", e);
pie-security-release/services/backup/java/com/android/server/backup/KeyValueAdbBackupEngine.java:146:        } catch (SecurityException e) {
pie-security-release/services/backup/java/com/android/server/backup/BackupPasswordManager.java:81:     * @throws SecurityException If caller does not have {@link android.Manifest.permission#BACKUP}
pie-security-release/services/backup/java/com/android/server/backup/BackupPasswordManager.java:93:     * @throws SecurityException If caller does not have {@link android.Manifest.permission#BACKUP}
pie-security-release/services/backup/java/com/android/server/backup/BackupPasswordManager.java:107:     * @throws SecurityException If caller does not have {@link android.Manifest.permission#BACKUP}
pie-security-release/services/backup/java/com/android/server/backup/internal/PerformBackupTask.java:494:            } catch (SecurityException ex) {
pie-security-release/services/backup/java/com/android/server/backup/restore/ActiveRestoreSession.java:322:            throw new SecurityException("No permission to restore other packages");
pie-security-release/services/backup/java/com/android/server/backup/Trampoline.java:151:            throw new SecurityException("No permission to configure backup activity");
pie-security-release/graphics/java/android/graphics/pdf/PdfEditor.java:64:     * @throws java.lang.SecurityException If the file requires a password or
pie-security-release/graphics/java/android/graphics/pdf/PdfRenderer.java:149:     * @throws java.lang.SecurityException If the file requires a password or
pie-security-release/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java:123:            throw new SecurityException(
pie-security-release/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java:130:            throws SecurityException {
pie-security-release/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java:137:            throws SecurityException {
pie-security-release/packages/ExternalStorageProvider/src/com/android/externalstorage/ExternalStorageProvider.java:536:        throw new SecurityException("The app is not given any access to the document under path " +
pie-security-release/packages/services/PacProcessor/src/com/android/pacprocessor/PacService.java:98:                throw new SecurityException();
pie-security-release/packages/services/PacProcessor/src/com/android/pacprocessor/PacService.java:107:                throw new SecurityException();
pie-security-release/packages/services/PacProcessor/src/com/android/pacprocessor/PacService.java:116:                throw new SecurityException();
pie-security-release/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java:1779:            throw new SecurityException("Permission denial: writing to settings requires:"
pie-security-release/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java:1922:                    throw new SecurityException("Only system, shell/root on a "
pie-security-release/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java:1929:                    throw new SecurityException("Only system, shell/root on a "
pie-security-release/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java:1936:                    throw new SecurityException("Only system, shell/root on a "
pie-security-release/packages/SettingsProvider/src/com/android/providers/settings/SettingsProvider.java:2922:                        } catch (SecurityException e) {
pie-security-release/packages/SystemUI/tests/src/com/android/systemui/statusbar/policy/RemoteInputViewTest.java:73:        // Avoid SecurityException RemoteInputView#sendRemoteInput().
pie-security-release/packages/SystemUI/src/com/android/systemui/volume/MediaSessions.java:256:        } catch (SecurityException e) {
pie-security-release/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogControllerImpl.java:173:        } catch (SecurityException e) {
pie-security-release/packages/SystemUI/src/com/android/systemui/volume/VolumeDialogControllerImpl.java:201:        } catch (SecurityException e) {
pie-security-release/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardService.java:69:            throw new SecurityException("Access denied to process: " + Binder.getCallingPid()
pie-security-release/packages/SystemUI/src/com/android/systemui/qs/external/TileServices.java:149:                throw new SecurityException("Component outside caller's uid");
pie-security-release/packages/SystemUI/src/com/android/systemui/qs/external/TileServices.java:152:            throw new SecurityException(e);
pie-security-release/packages/SystemUI/src/com/android/systemui/qs/external/TileLifecycleManager.java:165:            } catch (SecurityException e) {
pie-security-release/packages/SystemUI/src/com/android/systemui/statusbar/phone/KeyguardBottomAreaView.java:479:                } catch (SecurityException e) {
pie-security-release/packages/SystemUI/src/com/android/systemui/OverviewProxyService.java:307:        } catch (SecurityException e) {
pie-security-release/packages/SystemUI/src/com/android/systemui/media/RingtonePlayer.java:167:                throw new SecurityException("Async playback only available from system UID.");
pie-security-release/packages/SystemUI/src/com/android/systemui/media/RingtonePlayer.java:179:                throw new SecurityException("Async playback only available from system UID.");
pie-security-release/packages/SystemUI/src/com/android/systemui/media/RingtonePlayer.java:210:                                throw new SecurityException(e);
pie-security-release/packages/SystemUI/src/com/android/systemui/media/RingtonePlayer.java:216:            throw new SecurityException("Uri is not ringtone, alarm, or notification: " + uri);
pie-security-release/packages/WallpaperCropper/src/com/android/wallpapercropper/WallpaperCropActivity.java:153:                    } catch (SecurityException securityException) {
pie-security-release/packages/WallpaperCropper/src/com/android/wallpapercropper/WallpaperCropActivity.java:156:                            // finishes, potentially resulting in a SecurityException here.
pie-security-release/packages/WallpaperCropper/src/com/android/wallpapercropper/WallpaperCropActivity.java:163:                            throw securityException;
pie-security-release/packages/SettingsLib/src/com/android/settingslib/license/LicenseHtmlGeneratorFromXml.java:132:        } catch (FileNotFoundException | SecurityException e) {
pie-security-release/packages/PrintSpooler/src/com/android/printspooler/renderer/PdfManipulationService.java:96:                } catch (SecurityException e) {
pie-security-release/packages/PrintSpooler/src/com/android/printspooler/ui/AddPrinterActivity.java:500:                } catch (ActivityNotFoundException|SecurityException e) {
pie-security-release/location/java/android/location/LocationRequest.java:553:     * will throw a SecurityException when requesting location updates if the caller
pie-security-release/location/java/android/location/LocationRequest.java:577:     * will throw a SecurityException when requesting location updates if the caller
pie-security-release/location/java/android/location/LocationManager.java:467:     * @throws SecurityException if the caller is not permitted to access the
pie-security-release/location/java/android/location/LocationManager.java:551:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:583:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:616:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:644:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:746:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:776:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:806:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:829:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:853:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:918:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:947:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:973:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:1102:     * @throws SecurityException if {@link android.Manifest.permission#ACCESS_FINE_LOCATION}
pie-security-release/location/java/android/location/LocationManager.java:1151:     * @throws SecurityException if {@link android.Manifest.permission#ACCESS_FINE_LOCATION}
pie-security-release/location/java/android/location/LocationManager.java:1181:     * @throws SecurityException if {@link android.Manifest.permission#ACCESS_FINE_LOCATION}
pie-security-release/location/java/android/location/LocationManager.java:1206:     * @throws SecurityException if {@link android.Manifest.permission#ACCESS_FINE_LOCATION}
pie-security-release/location/java/android/location/LocationManager.java:1229:     * @throws SecurityException if {@link android.Manifest.permission#ACCESS_FINE_LOCATION}
pie-security-release/location/java/android/location/LocationManager.java:1301:     * method would throw {@link SecurityException} if the location permissions
pie-security-release/location/java/android/location/LocationManager.java:1325:     * method would throw {@link SecurityException} if the location permissions
pie-security-release/location/java/android/location/LocationManager.java:1381:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:1409:     * @throws SecurityException if no suitable permission is present
pie-security-release/location/java/android/location/LocationManager.java:1435:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1462:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1485:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1517:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1537:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1555:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1577:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1596:     * @throws SecurityException if {@link android.app.AppOpsManager#OPSTR_MOCK_LOCATION
pie-security-release/location/java/android/location/LocationManager.java:1813:     * @throws SecurityException if the ACCESS_FINE_LOCATION permission is not present
pie-security-release/location/java/android/location/LocationManager.java:1863:     * @throws SecurityException if the ACCESS_FINE_LOCATION permission is not present
pie-security-release/location/java/android/location/LocationManager.java:1878:     * @throws SecurityException if the ACCESS_FINE_LOCATION permission is not present
pie-security-release/location/java/android/location/LocationManager.java:1924:     * @throws SecurityException if the ACCESS_FINE_LOCATION permission is not present
pie-security-release/location/java/android/location/LocationManager.java:1974:     * @throws SecurityException if the ACCESS_FINE_LOCATION permission is not present
pie-security-release/location/java/android/location/LocationManager.java:1989:     * @throws SecurityException if the ACCESS_FINE_LOCATION permission is not present
pie-security-release/api/system-current.txt:3112:    method public boolean clearScores() throws java.lang.SecurityException;
pie-security-release/api/system-current.txt:3113:    method public void disableScoring() throws java.lang.SecurityException;
pie-security-release/api/system-current.txt:3115:    method public boolean setActiveScorer(java.lang.String) throws java.lang.SecurityException;
pie-security-release/api/system-current.txt:3116:    method public boolean updateScores(android.net.ScoredNetwork[]) throws java.lang.SecurityException;
pie-security-release/api/system-current.txt:4297:  public class DecryptionFailedException extends java.security.GeneralSecurityException {
pie-security-release/api/system-current.txt:4301:  public class InternalRecoveryServiceException extends java.security.GeneralSecurityException {
pie-security-release/api/system-current.txt:4357:  public class LockScreenRequiredException extends java.security.GeneralSecurityException {
pie-security-release/api/system-current.txt:4390:  public class SessionExpiredException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:3883:    method public deprecated java.util.List<android.app.ActivityManager.RecentTaskInfo> getRecentTasks(int, int) throws java.lang.SecurityException;
pie-security-release/api/current.txt:3885:    method public android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName) throws java.lang.SecurityException;
pie-security-release/api/current.txt:3886:    method public deprecated java.util.List<android.app.ActivityManager.RunningServiceInfo> getRunningServices(int) throws java.lang.SecurityException;
pie-security-release/api/current.txt:3887:    method public deprecated java.util.List<android.app.ActivityManager.RunningTaskInfo> getRunningTasks(int) throws java.lang.SecurityException;
pie-security-release/api/current.txt:4365:  public final class AuthenticationRequiredException extends java.lang.SecurityException implements android.os.Parcelable {
pie-security-release/api/current.txt:6453:    method public deprecated java.lang.String getCertInstallerPackage(android.content.ComponentName) throws java.lang.SecurityException;
pie-security-release/api/current.txt:6559:    method public deprecated void setCertInstallerPackage(android.content.ComponentName, java.lang.String) throws java.lang.SecurityException;
pie-security-release/api/current.txt:6571:    method public void setLockTaskPackages(android.content.ComponentName, java.lang.String[]) throws java.lang.SecurityException;
pie-security-release/api/current.txt:7422:    method public android.app.usage.NetworkStats queryDetails(int, java.lang.String, long, long) throws android.os.RemoteException, java.lang.SecurityException;
pie-security-release/api/current.txt:7423:    method public android.app.usage.NetworkStats queryDetailsForUid(int, java.lang.String, long, long, int) throws java.lang.SecurityException;
pie-security-release/api/current.txt:7424:    method public android.app.usage.NetworkStats queryDetailsForUidTag(int, java.lang.String, long, long, int, int) throws java.lang.SecurityException;
pie-security-release/api/current.txt:7425:    method public android.app.usage.NetworkStats queryDetailsForUidTagState(int, java.lang.String, long, long, int, int, int) throws java.lang.SecurityException;
pie-security-release/api/current.txt:7426:    method public android.app.usage.NetworkStats querySummary(int, java.lang.String, long, long) throws android.os.RemoteException, java.lang.SecurityException;
pie-security-release/api/current.txt:7427:    method public android.app.usage.NetworkStats.Bucket querySummaryForDevice(int, java.lang.String, long, long) throws android.os.RemoteException, java.lang.SecurityException;
pie-security-release/api/current.txt:7428:    method public android.app.usage.NetworkStats.Bucket querySummaryForUser(int, java.lang.String, long, long) throws android.os.RemoteException, java.lang.SecurityException;
pie-security-release/api/current.txt:8875:    method public void onSecurityException(android.accounts.Account, android.os.Bundle, java.lang.String, android.content.SyncResult);
pie-security-release/api/current.txt:23876:    method public void setDataSource(android.content.Context, android.net.Uri) throws java.lang.IllegalArgumentException, java.lang.SecurityException;
pie-security-release/api/current.txt:23994:    method public void setDataSource(android.content.Context, android.net.Uri) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.SecurityException;
pie-security-release/api/current.txt:23996:    method public void setDataSource(android.content.Context, android.net.Uri, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.SecurityException;
pie-security-release/api/current.txt:23997:    method public void setDataSource(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.SecurityException;
pie-security-release/api/current.txt:33010:    method public static final void setThreadPriority(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;
pie-security-release/api/current.txt:33011:    method public static final void setThreadPriority(int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;
pie-security-release/api/current.txt:33046:    method public static void verifyPackage(java.io.File, android.os.RecoverySystem.ProgressListener, java.io.File) throws java.security.GeneralSecurityException, java.io.IOException;
pie-security-release/api/current.txt:55248:    ctor protected ObjectInputStream() throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:55250:    method protected boolean enableResolveObject(boolean) throws java.lang.SecurityException;
pie-security-release/api/current.txt:55306:    ctor protected ObjectOutputStream() throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:55311:    method protected boolean enableReplaceObject(boolean) throws java.lang.SecurityException;
pie-security-release/api/current.txt:56389:    method public java.lang.reflect.Constructor<T> getConstructor(java.lang.Class<?>...) throws java.lang.NoSuchMethodException, java.lang.SecurityException;
pie-security-release/api/current.txt:56390:    method public java.lang.reflect.Constructor<?>[] getConstructors() throws java.lang.SecurityException;
pie-security-release/api/current.txt:56394:    method public java.lang.reflect.Constructor<T> getDeclaredConstructor(java.lang.Class<?>...) throws java.lang.NoSuchMethodException, java.lang.SecurityException;
pie-security-release/api/current.txt:56395:    method public java.lang.reflect.Constructor<?>[] getDeclaredConstructors() throws java.lang.SecurityException;
pie-security-release/api/current.txt:56398:    method public java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class<?>...) throws java.lang.NoSuchMethodException, java.lang.SecurityException;
pie-security-release/api/current.txt:56399:    method public java.lang.reflect.Method[] getDeclaredMethods() throws java.lang.SecurityException;
pie-security-release/api/current.txt:56406:    method public java.lang.reflect.Field[] getFields() throws java.lang.SecurityException;
pie-security-release/api/current.txt:56410:    method public java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class<?>...) throws java.lang.NoSuchMethodException, java.lang.SecurityException;
pie-security-release/api/current.txt:56411:    method public java.lang.reflect.Method[] getMethods() throws java.lang.SecurityException;
pie-security-release/api/current.txt:57116:  public class SecurityException extends java.lang.RuntimeException {
pie-security-release/api/current.txt:57117:    ctor public SecurityException();
pie-security-release/api/current.txt:57118:    ctor public SecurityException(java.lang.String);
pie-security-release/api/current.txt:57119:    ctor public SecurityException(java.lang.String, java.lang.Throwable);
pie-security-release/api/current.txt:57120:    ctor public SecurityException(java.lang.Throwable);
pie-security-release/api/current.txt:57960:    method public static void setAccessible(java.lang.reflect.AccessibleObject[], boolean) throws java.lang.SecurityException;
pie-security-release/api/current.txt:57961:    method public void setAccessible(boolean) throws java.lang.SecurityException;
pie-security-release/api/current.txt:60723:  public class AccessControlException extends java.lang.SecurityException {
pie-security-release/api/current.txt:60855:  public class DigestException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:60889:  public class GeneralSecurityException extends java.lang.Exception {
pie-security-release/api/current.txt:60890:    ctor public GeneralSecurityException();
pie-security-release/api/current.txt:60891:    ctor public GeneralSecurityException(java.lang.String);
pie-security-release/api/current.txt:60892:    ctor public GeneralSecurityException(java.lang.String, java.lang.Throwable);
pie-security-release/api/current.txt:60893:    ctor public GeneralSecurityException(java.lang.Throwable);
pie-security-release/api/current.txt:60897:    method public abstract void checkGuard(java.lang.Object) throws java.lang.SecurityException;
pie-security-release/api/current.txt:60902:    method public java.lang.Object getObject() throws java.lang.SecurityException;
pie-security-release/api/current.txt:60938:  public class InvalidAlgorithmParameterException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:60964:  public class KeyException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61130:  public class KeyStoreException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61193:  public class NoSuchAlgorithmException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61200:  public class NoSuchProviderException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61215:    method public void checkGuard(java.lang.Object) throws java.lang.SecurityException;
pie-security-release/api/current.txt:61435:  public class SignatureException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61484:  public class UnrecoverableEntryException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61571:  public class CRLException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61626:  public class CertPathBuilderException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61666:  public class CertPathValidatorException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61721:  public class CertStoreException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:61762:  public class CertificateException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:62289:  public class InvalidKeySpecException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:62296:  public class InvalidParameterSpecException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:69718:    ctor public FileHandler() throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:69719:    ctor public FileHandler(java.lang.String) throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:69720:    ctor public FileHandler(java.lang.String, boolean) throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:69721:    ctor public FileHandler(java.lang.String, int, int) throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:69722:    ctor public FileHandler(java.lang.String, int, int, boolean) throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:69739:    method public abstract void close() throws java.lang.SecurityException;
pie-security-release/api/current.txt:69749:    method public synchronized void setEncoding(java.lang.String) throws java.lang.SecurityException, java.io.UnsupportedEncodingException;
pie-security-release/api/current.txt:69751:    method public synchronized void setFilter(java.util.logging.Filter) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69752:    method public synchronized void setFormatter(java.util.logging.Formatter) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69753:    method public synchronized void setLevel(java.util.logging.Level) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69779:    method public deprecated void addPropertyChangeListener(java.beans.PropertyChangeListener) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69780:    method public void checkAccess() throws java.lang.SecurityException;
pie-security-release/api/current.txt:69786:    method public void readConfiguration() throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:69787:    method public void readConfiguration(java.io.InputStream) throws java.io.IOException, java.lang.SecurityException;
pie-security-release/api/current.txt:69788:    method public deprecated void removePropertyChangeListener(java.beans.PropertyChangeListener) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69789:    method public void reset() throws java.lang.SecurityException;
pie-security-release/api/current.txt:69823:    method public void addHandler(java.util.logging.Handler) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69872:    method public void removeHandler(java.util.logging.Handler) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69873:    method public void setFilter(java.util.logging.Filter) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69874:    method public void setLevel(java.util.logging.Level) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69901:    method public void close() throws java.lang.SecurityException;
pie-security-release/api/current.txt:69906:    method public synchronized void setPushLevel(java.util.logging.Level) throws java.lang.SecurityException;
pie-security-release/api/current.txt:69922:    method public synchronized void close() throws java.lang.SecurityException;
pie-security-release/api/current.txt:69925:    method protected synchronized void setOutputStream(java.io.OutputStream) throws java.lang.SecurityException;
pie-security-release/api/current.txt:70849:  public class BadPaddingException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:70967:  public class ExemptionMechanismException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:70982:  public class IllegalBlockSizeException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:71070:  public class NoSuchPaddingException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:71112:  public class ShortBufferException extends java.security.GeneralSecurityException {
pie-security-release/api/current.txt:72671:  public class LoginException extends java.security.GeneralSecurityException {
pie-security-release/api/test-current.txt:30:    method public void removeStacksInWindowingModes(int[]) throws java.lang.SecurityException;
pie-security-release/api/test-current.txt:31:    method public void removeStacksWithActivityTypes(int[]) throws java.lang.SecurityException;
pie-security-release/api/test-current.txt:32:    method public void resizeStack(int, android.graphics.Rect) throws java.lang.SecurityException;
pie-security-release/api/test-current.txt:33:    method public void setTaskWindowingMode(int, int, boolean) throws java.lang.SecurityException;
pie-security-release/api/test-current.txt:34:    method public void setTaskWindowingModeSplitScreenPrimary(int, int, boolean, boolean, android.graphics.Rect, boolean) throws java.lang.SecurityException;
Binary file pie-security-release/.git/index matches
pie-security-release/proto/src/metrics_constants.proto:3811:    // Value 2: A SecurityException was thrown
pie-security-release/keystore/java/android/security/keystore/AttestationUtils.java:209:     * @exception SecurityException if you are not permitted to obtain an attestation of the
pie-security-release/keystore/java/android/security/keystore/AndroidKeyStoreCipherSpiBase.java:34:import java.security.GeneralSecurityException;
pie-security-release/keystore/java/android/security/keystore/AndroidKeyStoreCipherSpiBase.java:265:        GeneralSecurityException e = KeyStoreCryptoOperationUtils.getExceptionForCipherInit(
pie-security-release/keystore/java/android/security/keystore/KeyStoreCryptoOperationUtils.java:24:import java.security.GeneralSecurityException;
pie-security-release/keystore/java/android/security/keystore/KeyStoreCryptoOperationUtils.java:74:    public static GeneralSecurityException getExceptionForCipherInit(
pie-security-release/nfc-extras/java/com/android/nfc_extras/NfcAdapterExtras.java:228:     * @throws java.lang.SecurityException if authentication failed
pie-security-release/config/preloaded-classes:4823:java.lang.SecurityException
pie-security-release/config/preloaded-classes:5173:java.security.GeneralSecurityException
pie-security-release/config/hiddenapi-public-dex.txt:6176:Landroid/content/AbstractThreadedSyncAdapter;->onSecurityException(Landroid/accounts/Account;Landroid/os/Bundle;Ljava/lang/String;Landroid/content/SyncResult;)V
pie-security-release/config/hiddenapi-public-dex.txt:59353:Ljava/lang/SecurityException;
pie-security-release/config/hiddenapi-public-dex.txt:59354:Ljava/lang/SecurityException;-><init>()V
pie-security-release/config/hiddenapi-public-dex.txt:59355:Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
pie-security-release/config/hiddenapi-public-dex.txt:59356:Ljava/lang/SecurityException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V
pie-security-release/config/hiddenapi-public-dex.txt:59357:Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V
pie-security-release/config/hiddenapi-public-dex.txt:62678:Ljava/security/GeneralSecurityException;
pie-security-release/config/hiddenapi-public-dex.txt:62679:Ljava/security/GeneralSecurityException;-><init>()V
pie-security-release/config/hiddenapi-public-dex.txt:62680:Ljava/security/GeneralSecurityException;-><init>(Ljava/lang/String;)V
pie-security-release/config/hiddenapi-public-dex.txt:62681:Ljava/security/GeneralSecurityException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V
pie-security-release/config/hiddenapi-public-dex.txt:62682:Ljava/security/GeneralSecurityException;-><init>(Ljava/lang/Throwable;)V
pie-security-release/config/hiddenapi-private-dex.txt:4464:Landroid/app/AppOpsManager;->buildSecurityExceptionMsg(IILjava/lang/String;)Ljava/lang/String;
pie-security-release/config/hiddenapi-private-dex.txt:9839:Landroid/app/RecoverableSecurityException$LocalDialog;
pie-security-release/config/hiddenapi-private-dex.txt:9840:Landroid/app/RecoverableSecurityException$LocalDialog;-><init>()V
pie-security-release/config/hiddenapi-private-dex.txt:9841:Landroid/app/RecoverableSecurityException;
pie-security-release/config/hiddenapi-private-dex.txt:9842:Landroid/app/RecoverableSecurityException;-><init>(Landroid/os/Parcel;)V
pie-security-release/config/hiddenapi-private-dex.txt:9843:Landroid/app/RecoverableSecurityException;-><init>(Ljava/lang/Throwable;Ljava/lang/CharSequence;Landroid/app/RemoteAction;)V
pie-security-release/config/hiddenapi-private-dex.txt:9844:Landroid/app/RecoverableSecurityException;-><init>(Ljava/lang/Throwable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/app/PendingIntent;)V
pie-security-release/config/hiddenapi-private-dex.txt:9845:Landroid/app/RecoverableSecurityException;->CREATOR:Landroid/os/Parcelable$Creator;
pie-security-release/config/hiddenapi-private-dex.txt:9846:Landroid/app/RecoverableSecurityException;->getUserAction()Landroid/app/RemoteAction;
pie-security-release/config/hiddenapi-private-dex.txt:9847:Landroid/app/RecoverableSecurityException;->getUserMessage()Ljava/lang/CharSequence;
pie-security-release/config/hiddenapi-private-dex.txt:9848:Landroid/app/RecoverableSecurityException;->mUserAction:Landroid/app/RemoteAction;
pie-security-release/config/hiddenapi-private-dex.txt:9849:Landroid/app/RecoverableSecurityException;->mUserMessage:Ljava/lang/CharSequence;
pie-security-release/config/hiddenapi-private-dex.txt:9850:Landroid/app/RecoverableSecurityException;->showAsDialog(Landroid/app/Activity;)V
pie-security-release/config/hiddenapi-private-dex.txt:9851:Landroid/app/RecoverableSecurityException;->showAsNotification(Landroid/content/Context;)V
pie-security-release/config/hiddenapi-private-dex.txt:9852:Landroid/app/RecoverableSecurityException;->showAsNotification(Landroid/content/Context;Ljava/lang/String;)V
pie-security-release/config/hiddenapi-private-dex.txt:9853:Landroid/app/RecoverableSecurityException;->TAG:Ljava/lang/String;
pie-security-release/config/hiddenapi-private-dex.txt:90077:Landroid/util/jar/StrictJarVerifier;->failedVerification(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;
pie-security-release/config/hiddenapi-private-dex.txt:90078:Landroid/util/jar/StrictJarVerifier;->failedVerification(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/SecurityException;
pie-security-release/config/hiddenapi-private-dex.txt:90081:Landroid/util/jar/StrictJarVerifier;->invalidDigest(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;
pie-security-release/config/hiddenapi-private-dex.txt:131033:Ljava/lang/SecurityException;->serialVersionUID:J
pie-security-release/config/hiddenapi-private-dex.txt:132702:Ljava/security/GeneralSecurityException;->serialVersionUID:J
pie-security-release/config/boot-image-profile.txt:4894:HPLandroid/security/keystore/KeyStoreCryptoOperationUtils;->getExceptionForCipherInit(Landroid/security/KeyStore;Landroid/security/keystore/AndroidKeyStoreKey;I)Ljava/security/GeneralSecurityException;
pie-security-release/config/boot-image-profile.txt:45574:HSPLjava/lang/SecurityException;-><init>(Ljava/lang/String;)V
pie-security-release/config/boot-image-profile.txt:61702:Ljava/lang/SecurityException;
pie-security-release/config/boot-image-profile.txt:62071:Ljava/security/GeneralSecurityException;
pie-security-release/telephony/java/android/telephony/PhoneNumberUtils.java:2262:        } catch (SecurityException ex) {
pie-security-release/telephony/java/android/telephony/VisualVoicemailService.java:273:     * @throws SecurityException if the caller is not the current default dialer
pie-security-release/telephony/java/android/telephony/LocationAccessPolicy.java:54:            int uid, int pid, boolean throwOnDeniedPermission) throws SecurityException {
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:3478:     * @throws SecurityException if the caller is not the current default dialer
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:3927:     * @throws SecurityException if the caller does not have carrier privileges or is not the
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:4200:     * {@link SecurityException} will be thrown otherwise.
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:6565:        } catch (SecurityException e) {
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:6584:        } catch (SecurityException e) {
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:6606:        } catch (SecurityException e) {
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:6626:        } catch (SecurityException e) {
pie-security-release/telephony/java/android/telephony/TelephonyManager.java:6889:        } catch (SecurityException e) {
pie-security-release/telephony/java/android/telephony/mbms/vendor/MbmsStreamingServiceBase.java:47:     * May throw an {@link IllegalArgumentException} or a {@link SecurityException}, which
pie-security-release/telephony/java/android/telephony/mbms/MbmsTempFileProvider.java:96:            throw new SecurityException("Provider must not be exported");
pie-security-release/telephony/java/android/telephony/mbms/MbmsTempFileProvider.java:99:            throw new SecurityException("Provider must grant uri permissions");
pie-security-release/telephony/java/android/telephony/mbms/MbmsTempFileProvider.java:167:            throw new SecurityException("Resolved path jumped beyond configured root");
pie-security-release/telephony/java/android/telephony/SubscriptionManager.java:1727:     * @throws SecurityException if the caller doesn't meet the requirements
pie-security-release/telephony/java/android/telephony/SubscriptionManager.java:1759:     * @throws SecurityException if the caller doesn't meet the requirements
pie-security-release/telephony/java/android/telephony/SubscriptionManager.java:1801:     * @throws SecurityException if the caller doesn't meet the requirements
pie-security-release/telephony/java/android/telephony/SubscriptionManager.java:1837:     * @throws SecurityException if the caller doesn't meet the requirements
pie-security-release/telephony/java/com/android/internal/telephony/CallerInfo.java:459:        } catch (SecurityException se) {
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:53:     *   <li>throw SecurityException: if the caller didn't declare any of these permissions, or, for
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:85:     *   <li>throw SecurityException: if the caller didn't declare any of these permissions, or, for
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:115:        } catch (SecurityException privilegedPhoneStateException) {
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:119:            } catch (SecurityException phoneStateException) {
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:202:        } catch (SecurityException readPhoneStateSecurityException) {
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:213:        } catch (SecurityException readSmsSecurityException) {
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:226:        } catch (SecurityException readPhoneNumberSecurityException) {
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:229:        throw new SecurityException(message + ": Neither user " + uid +
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:239:     * @throws SecurityException if the caller does not have the required permission/privileges
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:255:     * @throws SecurityException if the caller does not have the required privileges
pie-security-release/telephony/java/com/android/internal/telephony/TelephonyPermissions.java:274:            throw new SecurityException(message);
pie-security-release/apct-tests/perftests/core/src/android/os/ParcelPerfTest.java:202:            SecurityException e = new SecurityException("TestMessage");
pie-security-release/apct-tests/perftests/core/src/android/os/ParcelPerfTest.java:222:            p.writeException(new SecurityException(msg));
pie-security-release/apct-tests/perftests/core/src/android/os/ParcelPerfTest.java:227:            } catch (SecurityException e) {
pie-security-release/apct-tests/perftests/core/src/android/os/ParcelPerfTest.java:240:                } catch (SecurityException expected) {
pie-security-release/tests/testables/tests/src/android/testing/TestablePermissionsTest.java:71:    @Test(expected = SecurityException.class)
pie-security-release/tests/testables/tests/src/android/testing/TestablePermissionsTest.java:84:    @Test(expected = SecurityException.class)
pie-security-release/tests/testables/src/android/testing/TestablePermissions.java:71:            throw new SecurityException();
pie-security-release/tests/testables/src/android/testing/TestablePermissions.java:77:            throw new SecurityException();
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:43:            fail("IActivityManager.moveTaskToFront did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:45:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:53:            fail("IActivityManager.moveTaskToFront did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:55:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:66:            fail("IActivityManager.updateConfiguration did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:68:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:79:            fail("IActivityManager.setDebugApp did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:81:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:92:            fail("IActivityManager.setProcessLimit did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:94:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:105:            fail("IActivityManager.setAlwaysFinish did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:107:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:118:            fail("IActivityManager.signalPersistentProcesses did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:120:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:131:            fail("IActivityManager.unhandledBack did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:133:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:144:            fail("IActivityManager.setActivityController did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:146:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:157:            fail("IActivityManager.shutdown did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:159:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:170:            fail("IActivityManager.stopAppSwitches did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:172:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:180:            fail("IActivityManager.resumeAppSwitches did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ActivityManagerPermissionTests.java:182:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:46:                    "did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:47:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:61:                    "did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:62:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:83:                   "did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:84:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:98:                    " did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:99:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:113:                    "did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:114:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:128:                   "did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/PmPermissionsTests.java:129:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/SmsManagerPermissionTest.java:45:            fail("SmsManager.sendTextMessage did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/SmsManagerPermissionTest.java:46:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/SmsManagerPermissionTest.java:61:            fail("SmsManager.sendDataMessage did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/SmsManagerPermissionTest.java:62:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/SmsManagerPermissionTest.java:80:            fail("SmsManager.sendMultipartTextMessage did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/SmsManagerPermissionTest.java:81:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/VibratorServicePermissionTest.java:56:            fail("vibrate did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/VibratorServicePermissionTest.java:57:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/VibratorServicePermissionTest.java:71:            fail("cancelVibrate did not throw SecurityException as expected");
pie-security-release/tests/permission/src/com/android/framework/permission/tests/VibratorServicePermissionTest.java:72:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:46:            fail("IWindowManager.setEventDispatching did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:48:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:56:            fail("IWindowManager.addWindowToken did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:58:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:66:            fail("IWindowManager.removeWindowToken did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:68:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:77:            fail("IWindowManager.updateOrientationFromAppTokens did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:79:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:87:            fail("IWindowManager.setFocusedApp did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:89:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:97:            fail("IWindowManager.prepareAppTransition did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:99:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:107:            fail("IWindowManager.executeAppTransition did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:109:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:121:            fail("IWindowManager.disableKeyguard did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:123:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:131:            fail("IWindowManager.reenableKeyguard did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:133:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:141:            fail("IWindowManager.exitKeyguardSecurely did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:143:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:154:            fail("IWindowManager.setAnimationScale did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:156:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:164:            fail("IWindowManager.setAnimationScales did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:166:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:177:            fail("IWindowManager.updateRotation did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:179:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:187:            fail("IWindowManager.freezeRotation did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:189:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:197:            fail("IWindowManager.thawRotation did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/WindowManagerPermissionTests.java:199:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ServiceManagerPermissionTests.java:42:            fail("ServiceManager.addService did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ServiceManagerPermissionTests.java:44:        } catch (SecurityException e) {
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ServiceManagerPermissionTests.java:80:            fail("IServiceManager.setPermissionController did not throw SecurityException as"
pie-security-release/tests/permission/src/com/android/framework/permission/tests/ServiceManagerPermissionTests.java:82:        } catch (SecurityException e) {
pie-security-release/tests/net/java/com/android/server/IpSecServiceParameterizedTest.java:115:            throw new SecurityException("Unavailable permission requested");
pie-security-release/tests/net/java/com/android/server/IpSecServiceParameterizedTest.java:600:            fail("Expected a SecurityException for badPackage.");
pie-security-release/tests/net/java/com/android/server/IpSecServiceParameterizedTest.java:601:        } catch (SecurityException expected) {
pie-security-release/tests/net/java/com/android/server/ConnectivityServiceTest.java:2701:    public void testNetworkSpecifierUidSpoofSecurityException() {
pie-security-release/tests/net/java/com/android/server/ConnectivityServiceTest.java:2710:                throw new SecurityException("failure");
pie-security-release/tests/net/java/com/android/server/ConnectivityServiceTest.java:2728:            fail("Network request with spoofed UID did not throw a SecurityException");
pie-security-release/tests/net/java/com/android/server/ConnectivityServiceTest.java:2729:        } catch (SecurityException e) {
pie-security-release/tests/net/java/com/android/server/net/NetworkStatsCollectionTest.java:254:            fail("Should have thrown SecurityException for accessing different UID");
pie-security-release/tests/net/java/com/android/server/net/NetworkStatsCollectionTest.java:255:        } catch (SecurityException e) {
pie-security-release/cmds/statsd/tools/loadtest/src/com/android/statsd/loadtest/PerfDataRecorder.java:72:        } catch (IOException | SecurityException | NullPointerException e) {
pie-security-release/cmds/statsd/tools/loadtest/src/com/android/statsd/loadtest/PerfDataRecorder.java:73:            // SecurityException may occur when trying to dump multi-user info.
pie-security-release/test-runner/src/android/test/InstrumentationTestRunner.java:629:        } catch (SecurityException e) {
pie-security-release/telecomm/java/android/telecom/TelecomManager.java:855:     * A {@link SecurityException} will be thrown if a called is not the default dialer, or lacks
pie-security-release/telecomm/java/android/telecom/TelecomManager.java:991:     * A {@link SecurityException} will be thrown if an app tries to register a
pie-security-release/telecomm/java/android/telecom/TelecomManager.java:1447:     * For a managed {@link ConnectionService}, a {@link SecurityException} will be thrown if either
pie-security-release/telecomm/java/android/telecom/TelecomManager.java:1451:     * For a self-managed {@link ConnectionService}, a {@link SecurityException} will be thrown if
pie-security-release/telecomm/java/android/telecom/TelecomManager.java:1834:     * For a managed {@link ConnectionService}, a {@link SecurityException} will be thrown if either
pie-security-release/telecomm/java/android/telecom/TelecomManager.java:1839:     * For a self-managed {@link ConnectionService}, a {@link SecurityException} will be thrown if
pie-security-release/media/jni/android_media_MediaPlayer2.cpp:260:            jniThrowException(env, "java/lang/SecurityException", NULL);
pie-security-release/media/jni/android_media_MediaPlayer.cpp:207:            jniThrowException(env, "java/lang/SecurityException", NULL);
pie-security-release/media/java/android/media/Ringtone.java:257:                } catch (SecurityException e) {
pie-security-release/media/java/android/media/Ringtone.java:321:        } catch (SecurityException | IOException e) {
pie-security-release/media/java/android/media/MediaExtractor.java:134:        } catch (SecurityException ex) {
pie-security-release/media/java/android/media/MiniThumbFile.java:95:            } catch (SecurityException ex) {
pie-security-release/media/java/android/media/tv/TvContract.java:280:     * provider will be cleared. Once a package is blocked, {@link SecurityException} will be thrown
pie-security-release/media/java/android/media/tv/TvContract.java:299:     * the content provider will be cleared. Once a package is blocked, {@link SecurityException}
pie-security-release/media/java/android/media/tv/TvContract.java:325:     * the content provider will be cleared. Once a package is blocked, {@link SecurityException}
pie-security-release/media/java/android/media/MediaMetadataRetriever.java:151:     * @throws SecurityException if the Uri cannot be used due to lack of
pie-security-release/media/java/android/media/MediaMetadataRetriever.java:155:        throws IllegalArgumentException, SecurityException {
pie-security-release/media/java/android/media/MediaMetadataRetriever.java:190:        } catch (SecurityException ex) {
pie-security-release/media/java/android/media/RingtoneManager.java:1011:        } catch (SecurityException e) {
pie-security-release/media/java/android/media/RingtoneManager.java:1027:        } catch (SecurityException | IOException e) {
pie-security-release/media/java/android/media/midi/MidiDeviceServer.java:190:                    throw new SecurityException("Can't access private device from different UID");
pie-security-release/media/java/android/media/midi/MidiDeviceServer.java:228:                    throw new SecurityException("Can't access private device from different UID");
pie-security-release/media/java/android/media/midi/MidiDeviceServer.java:325:                throw new SecurityException("setDeviceInfo should only be called by MidiService");
pie-security-release/media/java/android/media/MediaPlayer2Impl.java:916:        } catch (NullPointerException | SecurityException | IOException ex) {
pie-security-release/media/java/android/media/MediaPlayer2Impl.java:2372:        } catch (SecurityException ex) {
pie-security-release/media/java/android/media/MediaPlayer2Impl.java:4757:            } catch (SecurityException e) {
pie-security-release/media/java/android/media/MediaPlayer.java:926:        } catch (SecurityException ex) {
pie-security-release/media/java/android/media/MediaPlayer.java:991:        } catch (SecurityException ex) {
pie-security-release/media/java/android/media/MediaPlayer.java:1006:            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {
pie-security-release/media/java/android/media/MediaPlayer.java:1102:            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {
pie-security-release/media/java/android/media/MediaPlayer.java:1110:        } catch (NullPointerException | SecurityException | IOException ex) {
pie-security-release/media/java/android/media/MediaPlayer.java:1130:            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {
pie-security-release/media/java/android/media/MediaPlayer.java:1143:            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {
pie-security-release/media/java/android/media/MediaPlayer.java:1148:            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException
pie-security-release/media/java/android/media/MediaPlayer.java:1169:            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {
pie-security-release/media/java/android/media/MediaPlayer.java:1197:        throws IOException, IllegalArgumentException, SecurityException, IllegalStateException;
pie-security-release/media/java/android/media/MediaPlayer.java:2934:        } catch (SecurityException ex) {
pie-security-release/media/tests/MediaFrameworkTest/src/com/android/mediaframeworktest/helpers/CameraTestHelper.java:137:        } catch (SecurityException e) {
pie-security-release/media/tests/EffectsTest/src/com/android/effectstest/SimplePlayer.java:134:                  } catch (SecurityException ex) {
